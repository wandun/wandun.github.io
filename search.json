[{"title":"'写出你自己的ORM框架（一) '","url":"http://guokangjie.cn/2019/05/19/写出你自己的ORM框架（一）/","content":"<p>前言：读完本片文章大约20分</p>\n<ul>\n<li><a href=\"https://github.com/wandun/ORM\" target=\"_blank\" rel=\"noopener\">代码地址</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38263083/article/details/90239643\" target=\"_blank\" rel=\"noopener\">写出你自己的ORM框架（一）</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38263083/article/details/90295130\" target=\"_blank\" rel=\"noopener\">写出你自己的ORM框架（二）</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38263083/article/details/90318186\" target=\"_blank\" rel=\"noopener\">写出你自己的ORM框架（三）</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38263083/article/details/90295861\" target=\"_blank\" rel=\"noopener\">写出你自己的ORM框架（四）</a><h1 id=\"一、架构说明\"><a href=\"#一、架构说明\" class=\"headerlink\" title=\"一、架构说明\"></a>一、架构说明</h1></li>\n</ul>\n<p><strong>主要</strong>分为如下几个包，和以下几个类，接口（一级为包，二级（普通颜色为类，黄色为接口），加粗为说明）</p>\n<ul>\n<li>cn.gxm.sorm.bean  <ul>\n<li>ColumnInfo  <strong>对应数据库中的每一个字段结构</strong></li>\n<li>TableInfo  <strong>对应数据库中的每表结构</strong></li>\n<li>Configuration <strong>映射资源文件（数据源 ，dataSource，将配置文件中的信息映射成对象）</strong></li>\n</ul>\n</li>\n<li>cn.gxm.sorm.core<ul>\n<li>DBManager  <strong>根据配置信息，维持连接对象的管理（增加连接池功能）</strong></li>\n<li>==Query==  <strong>操作数据库的核心接口，CRUD都在这里定义</strong></li>\n<li>QueryFactory  <strong>工厂模式创建核心 query 对象</strong></li>\n<li>TableContext  <strong>理数据库中的所有表和java中的对象的关系可以根据表生成java对象</strong></li>\n<li>==TypeConvertor==  <strong>用于数据数据类型与java数据类型转换，因为数据库的不同，类型转换也不同，所以定义为接口</strong></li>\n</ul>\n</li>\n<li>cn.gxm.sorm.utils<ul>\n<li>JavaFileUtils <strong>操作文件工具类</strong></li>\n<li>JDBCUtils  <strong>封装数据库连接操作工具类</strong></li>\n<li>ReflectUtils  <strong>反射的工具类</strong></li>\n<li>StringUtils   <strong>操作字符串的工具类</strong></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"二、第一部分实现\"><a href=\"#二、第一部分实现\" class=\"headerlink\" title=\"二、第一部分实现\"></a>二、第一部分实现</h1><h2 id=\"2-0-实现db-properties文件，以及对应的映射类configuration\"><a href=\"#2-0-实现db-properties文件，以及对应的映射类configuration\" class=\"headerlink\" title=\"2.0 实现db.properties文件，以及对应的映射类configuration\"></a>2.0 实现db.properties文件，以及对应的映射类configuration</h2><ul>\n<li><p>db.properties文件即datasourse，连接数据库的必要参数，如下:<br>前四个大家都知道，</p>\n<ul>\n<li>srcPath 是以后使用我们这个框架项目的src路径</li>\n<li>pojoPackage 是我们根据数据库的表信息生成的pojo的位置<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">driver=com.mysql.jdbc.Driver</span><br><span class=\"line\">url=jdbc:mysql://127.0.0.1:3306/sorm</span><br><span class=\"line\">username=root</span><br><span class=\"line\">password=123456</span><br><span class=\"line\">srcPath=D://IntelliJ_IDEA//MyDemo//SORM//src</span><br><span class=\"line\">pojoPackage=cn.gxm.sorm.pojo</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>configuration类就不用多说了(set,get等方法省略),如下</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 数据库驱动</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String driver;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 连接数据库url</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String url;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 数据库用户名</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String username;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 数据库密码</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 项目src绝对路径</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String srcPath;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 生成的表对象的包路径</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String pojoPackage;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"2-1-实现数据库中表对应的Pojo\"><a href=\"#2-1-实现数据库中表对应的Pojo\" class=\"headerlink\" title=\"2.1 实现数据库中表对应的Pojo\"></a>2.1 实现数据库中表对应的Pojo</h2><p>后面我们将会通过数据库的元数据获取表，以及表中的字段，所以，我们需要对应的pojo，如下<br><strong>字段</strong>：(set,get等方法省略)<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> GXM www.guokangjie.cn</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2019/5/15</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * 对应数据库中的每一个字段结构</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ColumnInfo</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 字段名称 例如 id,name,age</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 字段类型 例如 varchar</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String dataType;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 字段键类型 例如 1：普通键 2：主键 3：外键</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer keyType;</span><br></pre></td></tr></table></figure></p>\n<p><strong>表</strong> (set,get等方法省略)<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> GXM www.guokangjie.cn</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2019/5/15</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * 对应数据库中的表结构</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TableInfo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 表的名称 例如 User</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 表中的字段,使用map为方便后期获取</span></span><br><span class=\"line\"><span class=\"comment\">     * 例如 map&lt;id,ColumnInfo&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Map&lt;String,ColumnInfo&gt; columns;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 表中的唯一主键</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ColumnInfo onlyPriKey;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 联合主键即（多个字段组成的主键）</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;ColumnInfo&gt; unionKey;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-2-实现连接的提供，datasourse资源文件的映射\"><a href=\"#2-2-实现连接的提供，datasourse资源文件的映射\" class=\"headerlink\" title=\"2.2 实现连接的提供，datasourse资源文件的映射\"></a>2.2 实现连接的提供，datasourse资源文件的映射</h2><p>从前面的架构来说，连接的提供以及资源文件的映射都在DBManager中处理，因为资源文件映射只需要一次即可，所以放在static中（只会加载一次），并且向外提供了获取连接的静态方法，以及Configuration静态方法，方便外界的操作！<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.gxm.sorm.core;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.gxm.sorm.bean.Configuration;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.DriverManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> GXM www.guokangjie.cn</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2019/5/15</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * 根据配置信息，维持连接对象的管理（增加连接词功能）</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DBManager</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Configuration configuration = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Properties properties = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DBManager</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 将数据加载到Configuration类中</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            properties = <span class=\"keyword\">new</span> Properties();</span><br><span class=\"line\">            configuration = <span class=\"keyword\">new</span> Configuration();</span><br><span class=\"line\">            properties.load(Thread.currentThread().getContextClassLoader().getResourceAsStream(<span class=\"string\">\"db.properties\"</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">            configuration.setDriver(properties.getProperty(<span class=\"string\">\"driver\"</span>));</span><br><span class=\"line\">            configuration.setUrl(properties.getProperty(<span class=\"string\">\"url\"</span>));</span><br><span class=\"line\">            configuration.setUsername(properties.getProperty(<span class=\"string\">\"username\"</span>));</span><br><span class=\"line\">            configuration.setPassword(properties.getProperty(<span class=\"string\">\"password\"</span>));</span><br><span class=\"line\">            configuration.setSrcPath(properties.getProperty(<span class=\"string\">\"srcPath\"</span>));</span><br><span class=\"line\">            configuration.setPojoPackage(properties.getProperty(<span class=\"string\">\"pojoPackage\"</span>));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 提供connection</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title\">getConnection</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Class.forName(configuration.getDriver());</span><br><span class=\"line\">            Connection connection = DriverManager.getConnection(configuration.getUrl(),</span><br><span class=\"line\">                    configuration.getUsername(), configuration.getPassword());</span><br><span class=\"line\">            <span class=\"keyword\">return</span> connection;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 返回db.properties对应的bean</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Configuration <span class=\"title\">getConfiguration</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> configuration;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-3-根据数据库的表结构生成对应的pojo\"><a href=\"#2-3-根据数据库的表结构生成对应的pojo\" class=\"headerlink\" title=\"2.3 根据数据库的表结构生成对应的pojo\"></a>2.3 根据数据库的表结构生成对应的pojo</h2><p>这部分知识需要用到数据库的元数据，不理解的请参考：<a href=\"https://blog.csdn.net/chen_zw/article/details/18816599\" target=\"_blank\" rel=\"noopener\">JDBC元数据操作（一）– DatabaseMetaData接口详解</a></p>\n<p>这部分我们需要在tableContext类中完成,如下<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.gxm.sorm.core;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.gxm.sorm.bean.ColumnInfo;</span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.gxm.sorm.bean.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.gxm.sorm.bean.TableInfo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> GXM www.guokangjie.cn</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2019/5/15</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * 管理数据库中的所有表和java中的对象的关系</span></span><br><span class=\"line\"><span class=\"comment\"> * 可以根据表生成java对象</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TableContext</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 对应数据库中所有的表</span></span><br><span class=\"line\"><span class=\"comment\">     * key 为表的名称， value为表对应的bean</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Map&lt;String, TableInfo&gt; allTables = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">TableContext</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取数据库中的所有表以及相关字段，并生成对应的pojo</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        Connection connection = DBManager.getConnection();</span><br><span class=\"line\">        ResultSet rs = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 根据metaData就可以获取到数据库的源信息(表，字段等等)</span></span><br><span class=\"line\">            <span class=\"comment\">// 具体请查看 https://blog.csdn.net/chen_zw/article/details/18816599</span></span><br><span class=\"line\">            DatabaseMetaData metaData = connection.getMetaData();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//处理表</span></span><br><span class=\"line\">            rs = metaData.getTables(<span class=\"keyword\">null</span>, <span class=\"string\">\"%\"</span>, <span class=\"string\">\"%\"</span>, <span class=\"keyword\">new</span> String[]&#123; <span class=\"string\">\"TABLE\"</span> &#125;);</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (rs.next()) &#123;</span><br><span class=\"line\">                TableInfo tableInfo = <span class=\"keyword\">new</span> TableInfo();</span><br><span class=\"line\">                String tableName = rs.getString(<span class=\"string\">\"TABLE_NAME\"</span>);</span><br><span class=\"line\">                tableInfo.setName(tableName);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//处理一个表中的所有列</span></span><br><span class=\"line\">                ResultSet set = metaData.getColumns(<span class=\"keyword\">null</span>, <span class=\"string\">\"%\"</span>, tableName, <span class=\"string\">\"%\"</span>);</span><br><span class=\"line\">                Map&lt;String, ColumnInfo&gt; columnInfoMap = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (set.next())&#123;</span><br><span class=\"line\">                    ColumnInfo columnInfo = <span class=\"keyword\">new</span> ColumnInfo(set.getString(<span class=\"string\">\"COLUMN_NAME\"</span>),</span><br><span class=\"line\">                            set.getString(<span class=\"string\">\"TYPE_NAME\"</span>),<span class=\"number\">1</span>);</span><br><span class=\"line\">                    columnInfoMap.put(columnInfo.getName(),columnInfo);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//处理表中的主键，跟新字段的键类型</span></span><br><span class=\"line\">                List&lt;ColumnInfo&gt; columnInfoList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">                ResultSet primaryKeys = metaData.getPrimaryKeys(<span class=\"keyword\">null</span>, <span class=\"string\">\"%\"</span>, tableName);</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (primaryKeys.next())&#123;</span><br><span class=\"line\">                    ColumnInfo columnInfo = columnInfoMap.get(primaryKeys.getObject(<span class=\"string\">\"COLUMN_NAME\"</span>));</span><br><span class=\"line\">                    columnInfo.setKeyType(<span class=\"number\">2</span>);</span><br><span class=\"line\">                    columnInfoMap.put((String)primaryKeys.getObject(<span class=\"string\">\"COLUMN_NAME\"</span>),columnInfo);</span><br><span class=\"line\">                    columnInfoList.add(columnInfo);</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(columnInfoList.size() == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                        tableInfo.setOnlyPriKey(columnInfo);</span><br><span class=\"line\">                    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 说明为联合主键</span></span><br><span class=\"line\">                        tableInfo.setUnionKey(columnInfoList);</span><br><span class=\"line\">                        tableInfo.setOnlyPriKey(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                tableInfo.setColumns(columnInfoMap);</span><br><span class=\"line\">                allTables.put(tableName,tableInfo);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 对外提供获取数据库表信息的方法</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Map&lt;String, TableInfo&gt; <span class=\"title\">getAllTables</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> allTables;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在这里对该类做一个测试，数据库的两张表结构如下<br><strong>company</strong><br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"string\">`company`</span> (</span><br><span class=\"line\">  <span class=\"string\">`id`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> AUTO_INCREMENT,</span><br><span class=\"line\">  <span class=\"string\">`name`</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`address`</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  PRIMARY <span class=\"keyword\">KEY</span> (<span class=\"string\">`id`</span>,<span class=\"string\">`name`</span>)</span><br><span class=\"line\">) <span class=\"keyword\">ENGINE</span>=<span class=\"keyword\">InnoDB</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure></p>\n<p><strong>emp</strong><br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"string\">`emp`</span> (</span><br><span class=\"line\">  <span class=\"string\">`id`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> AUTO_INCREMENT,</span><br><span class=\"line\">  <span class=\"string\">`name`</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`age`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  PRIMARY <span class=\"keyword\">KEY</span> (<span class=\"string\">`id`</span>)</span><br><span class=\"line\">) <span class=\"keyword\">ENGINE</span>=<span class=\"keyword\">InnoDB</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure></p>\n<p>测试代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(TableContext.getAllTables());</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<p>结果：(这样可能不舒服，推荐大家debug一下，在debug中看的更明显)<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;emp=TableInfo&#123;name=<span class=\"string\">'emp'</span>, columns=&#123;name=ColumnInfo&#123;name=<span class=\"string\">'name'</span>, dataType=<span class=\"string\">'VARCHAR'</span>, keyType=<span class=\"number\">1</span>&#125;, id=ColumnInfo&#123;name=<span class=\"string\">'id'</span>, dataType=<span class=\"string\">'INT'</span>, keyType=<span class=\"number\">2</span>&#125;, age=ColumnInfo&#123;name=<span class=\"string\">'age'</span>, dataType=<span class=\"string\">'INT'</span>, keyType=<span class=\"number\">1</span>&#125;&#125;, onlyPriKey=ColumnInfo&#123;name=<span class=\"string\">'id'</span>, dataType=<span class=\"string\">'INT'</span>, keyType=<span class=\"number\">2</span>&#125;, unionKey=<span class=\"keyword\">null</span>&#125;, company=TableInfo&#123;name=<span class=\"string\">'company'</span>, columns=&#123;address=ColumnInfo&#123;name=<span class=\"string\">'address'</span>, dataType=<span class=\"string\">'VARCHAR'</span>, keyType=<span class=\"number\">1</span>&#125;, name=ColumnInfo&#123;name=<span class=\"string\">'name'</span>, dataType=<span class=\"string\">'VARCHAR'</span>, keyType=<span class=\"number\">2</span>&#125;, id=ColumnInfo&#123;name=<span class=\"string\">'id'</span>, dataType=<span class=\"string\">'INT'</span>, keyType=<span class=\"number\">2</span>&#125;&#125;, onlyPriKey=<span class=\"keyword\">null</span>, unionKey=[ColumnInfo&#123;name=<span class=\"string\">'id'</span>, dataType=<span class=\"string\">'INT'</span>, keyType=<span class=\"number\">2</span>&#125;, ColumnInfo&#123;name=<span class=\"string\">'name'</span>, dataType=<span class=\"string\">'VARCHAR'</span>, keyType=<span class=\"number\">2</span>&#125;]&#125;&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-4-完成Mysql字段类型与java数据类型的转换\"><a href=\"#2-4-完成Mysql字段类型与java数据类型的转换\" class=\"headerlink\" title=\"2.4 完成Mysql字段类型与java数据类型的转换\"></a>2.4 完成Mysql字段类型与java数据类型的转换</h2><p>因为这里主要使用mysql所以就写这一部分即可，而且这里并不做所有数据的转化!</p>\n<h3 id=\"2-4-1-封装mysql字段类型\"><a href=\"#2-4-1-封装mysql字段类型\" class=\"headerlink\" title=\"2.4.1 封装mysql字段类型\"></a>2.4.1 封装mysql字段类型</h3><p>这样，方便以后的使用，与扩展<br><strong>类MysqlType:</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.gxm.sorm.core;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> GXM www.guokangjie.cn</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2019/5/16</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MySqlType</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * mysql的varchar类型</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String VARCHAR = <span class=\"string\">\"varchar\"</span>;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * mysql的bigint类型</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String BIGINT = <span class=\"string\">\"bigint\"</span>;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * mysql的int类型</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String INT = <span class=\"string\">\"int\"</span>;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * mysql的integer类型</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String INTEGER = <span class=\"string\">\"integer\"</span>;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * mysql的date类型</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String DATE = <span class=\"string\">\"date\"</span>;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * mysql的time类型</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String TIME = <span class=\"string\">\"time\"</span>;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * mysql的double类型</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String DOUBLE = <span class=\"string\">\"double\"</span>;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * mysql的float类型</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String FLOAT = <span class=\"string\">\"float\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-4-2-实现具体的mysql字段类型与java类型转化\"><a href=\"#2-4-2-实现具体的mysql字段类型与java类型转化\" class=\"headerlink\" title=\"2.4.2 实现具体的mysql字段类型与java类型转化\"></a>2.4.2 实现具体的mysql字段类型与java类型转化</h3><p>写一个类MySqlTypeConvertor继承TypeConvertor<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.gxm.sorm.core;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Date;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> GXM www.guokangjie.cn</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2019/5/16</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * 实现mysql数据库与java数据类型的转换</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MySqlTypeConvertor</span> <span class=\"keyword\">implements</span> <span class=\"title\">TypeConvertor</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 暂时不实现</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> javaType java数据类型</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">javaType2DBType</span><span class=\"params\">(String javaType)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 现mysql数据库到java数据类型的转换</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> columnType 数据库类型</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 与之对应的Java类型</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">DBType2javaType</span><span class=\"params\">(String columnType)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(MySqlType.VARCHAR.equalsIgnoreCase(columnType))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"String\"</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(MySqlType.INT.equalsIgnoreCase(columnType)</span><br><span class=\"line\">                || MySqlType.BIGINT.equalsIgnoreCase(columnType)</span><br><span class=\"line\">                || MySqlType.INTEGER.equalsIgnoreCase(columnType))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"Integer\"</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(MySqlType.DATE.equalsIgnoreCase(columnType)</span><br><span class=\"line\">                || MySqlType.TIME.equalsIgnoreCase(columnType))&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 注意这里转为java.sql.Date而不是java.util.date</span></span><br><span class=\"line\">            <span class=\"comment\">// 如果直接转换为utils.date，则需要具体的实现，用到时，我们再转化即可</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"java.sql.Date\"</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(MySqlType.DOUBLE.equalsIgnoreCase(columnType))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"Double\"</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(MySqlType.FLOAT.equalsIgnoreCase(columnType))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"Float\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 这里不全部转化</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"三、完成javaFileUtils\"><a href=\"#三、完成javaFileUtils\" class=\"headerlink\" title=\"三、完成javaFileUtils\"></a>三、完成javaFileUtils</h1><p>上一部分我们已经做到了，可以根据数据库的表获取其中的元数据了，接下就是根据元数据完成pojo，说白了，就是拼接字符串，并生成文件</p>\n<h2 id=\"3-1-为完成javaFileUtils做出必要的准备\"><a href=\"#3-1-为完成javaFileUtils做出必要的准备\" class=\"headerlink\" title=\"3.1 为完成javaFileUtils做出必要的准备\"></a>3.1 为完成javaFileUtils做出必要的准备</h2><h3 id=\"3-1-1-为更好的解耦，我们抽取公用的方法放到工具类中\"><a href=\"#3-1-1-为更好的解耦，我们抽取公用的方法放到工具类中\" class=\"headerlink\" title=\"3.1.1 为更好的解耦，我们抽取公用的方法放到工具类中\"></a>3.1.1 为更好的解耦，我们抽取公用的方法放到工具类中</h3><p><strong>StringUtils:</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 将字符串的首字母大写</span></span><br><span class=\"line\"><span class=\"comment\">    * <span class=\"doctag\">@param</span> src</span></span><br><span class=\"line\"><span class=\"comment\">    * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">toUpperCaseHeadChar</span><span class=\"params\">(String src)</span></span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> src.toUpperCase().substring(<span class=\"number\">0</span>,<span class=\"number\">1</span>)+src.substring(<span class=\"number\">1</span>);</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-1-2-设计一个属性的字段-与set，get方法\"><a href=\"#3-1-2-设计一个属性的字段-与set，get方法\" class=\"headerlink\" title=\"3.1.2 设计一个属性的字段,与set，get方法\"></a>3.1.2 设计一个属性的字段,与set，get方法</h3><p><strong>JavaFieldSetGet (set，get方法省略)</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.gxm.sorm.bean;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> GXM www.guokangjie.cn</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2019/5/17</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * 每一个pojo都有的java属性，set,get等等</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">JavaFieldSetGet</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 例如  (private String id)</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String fieldInfo;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 例如</span></span><br><span class=\"line\"><span class=\"comment\">     * public String getId()&#123;</span></span><br><span class=\"line\"><span class=\"comment\">     *     return id;</span></span><br><span class=\"line\"><span class=\"comment\">     * &#125;</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String fieldGetInfo;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 例如</span></span><br><span class=\"line\"><span class=\"comment\">     * public void setId(String id)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">     *     this.id = id;</span></span><br><span class=\"line\"><span class=\"comment\">     * &#125;</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String fieldSetInfo;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> fieldInfo+fieldGetInfo+fieldSetInfo;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"3-2-java的file生成我们在javaFileUtils工具类里面完成，其主要方法如下\"><a href=\"#3-2-java的file生成我们在javaFileUtils工具类里面完成，其主要方法如下\" class=\"headerlink\" title=\"3.2 java的file生成我们在javaFileUtils工具类里面完成，其主要方法如下\"></a>3.2 java的file生成我们在javaFileUtils工具类里面完成，其主要方法如下</h2><ul>\n<li><p>generateJavaFieldSetGet <strong>每一个pojo都有属性和set，get方法，我们生成说白了就是字符串</strong><br>该方法 测试结果如图：<img src=\"https://img-blog.csdnimg.cn/20190517155101157.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4MjYzMDgz,size_16,color_FFFFFF,t_70\" alt=\"generateJavaFieldSetGet 方法测试结果说明\"></p>\n</li>\n<li><p>generateJavaSrc <strong>根据上面的方法我们可以完成一个属性的字符串所有功能，所以我们这里再将表的数据也拼接成字符串，合并最总变为一个java的pojo（只不过是字符串）</strong><br>该方法 测试结果如图：<br><img src=\"https://img-blog.csdnimg.cn/20190517155419102.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4MjYzMDgz,size_16,color_FFFFFF,t_70\" alt=\"generateJavaSrc 方法测试结果说明\"></p>\n</li>\n<li><p>generatePOJOFile <strong>对外提供方法生成pojo文件</strong></p>\n</li>\n</ul>\n<p>其代码如下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> GXM www.guokangjie.cn</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2019/5/15</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * 操作文件（暂时先将columnInfo转为对应的java代码）</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">JavaFileUtils</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据传入的数据库字段信息生成java的bean代码</span></span><br><span class=\"line\"><span class=\"comment\">     * varchar id -&gt; private String id 以及相应set与get方法</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> columnInfo 数据库字段信息</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> typeConvertor 对应的数据库字段数据类型转换</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 一个属性的bean代码</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> JavaFieldSetGet <span class=\"title\">generateJavaFieldSetGet</span><span class=\"params\">(@NotNull ColumnInfo columnInfo,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                                          @NotNull TypeConvertor typeConvertor)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(columnInfo==<span class=\"keyword\">null</span> || typeConvertor == <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> SormException(<span class=\"string\">\"ColumnInfo or TypeConvertor is null\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        JavaFieldSetGet fieldSetGet = <span class=\"keyword\">new</span> JavaFieldSetGet();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 字段名称 id</span></span><br><span class=\"line\">        String columnName = columnInfo.getName();</span><br><span class=\"line\">        String javaFieldType = typeConvertor.DBType2javaType(columnInfo.getDataType());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//private String id</span></span><br><span class=\"line\">        String fieldInfo = <span class=\"string\">\"\\tprivate \"</span>+ javaFieldType +<span class=\"string\">\" \"</span>+ columnName +<span class=\"string\">\";\\n\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * public void getId()&#123;</span></span><br><span class=\"line\"><span class=\"comment\">         *      return id;</span></span><br><span class=\"line\"><span class=\"comment\">         * &#125;</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        StringBuilder fieldGetInfo = <span class=\"keyword\">new</span> StringBuilder(<span class=\"string\">\"\\tpublic  \"</span>+javaFieldType+<span class=\"string\">\" get\"</span>+StringUtils.toUpperCaseHeadChar(columnName)+<span class=\"string\">\" ()&#123;\\n\"</span>);</span><br><span class=\"line\">        fieldGetInfo.append(<span class=\"string\">\"\\t\\treturn \"</span>+ columnName+<span class=\"string\">\";\\n\"</span>);</span><br><span class=\"line\">        fieldGetInfo.append(<span class=\"string\">\"\\t&#125;\\n\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * public void setId(String id)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">         *      this.id = id;</span></span><br><span class=\"line\"><span class=\"comment\">         * &#125;</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        StringBuilder fieldSetInfo = <span class=\"keyword\">new</span> StringBuilder(<span class=\"string\">\"\\tpublic void set\"</span>+StringUtils.toUpperCaseHeadChar(columnName)+<span class=\"string\">\" (\"</span>+javaFieldType+<span class=\"string\">\" \"</span>+columnName+<span class=\"string\">\")&#123;\\n\"</span>);</span><br><span class=\"line\">        fieldSetInfo.append(<span class=\"string\">\"\\t\\tthis.\"</span>+columnName+<span class=\"string\">\"=\"</span>+ columnName+<span class=\"string\">\";\\n\"</span>);</span><br><span class=\"line\">        fieldSetInfo.append(<span class=\"string\">\"\\t&#125;\\n\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        fieldSetGet.setFieldInfo(fieldInfo);</span><br><span class=\"line\">        fieldSetGet.setFieldGetInfo(fieldGetInfo.toString());</span><br><span class=\"line\">        fieldSetGet.setFieldSetInfo(fieldSetInfo.toString());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> fieldSetGet;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据表结构生成对应的pojo</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> tableInfo 表信息</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> typeConvertor java与数据库字段类型转化器</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> author 生成的Pojo的作者</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> pojo字符串</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String <span class=\"title\">generateJavaSrc</span><span class=\"params\">(@NotNull TableInfo tableInfo,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                         @NotNull TypeConvertor typeConvertor,String author)</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(tableInfo==<span class=\"keyword\">null</span> || typeConvertor == <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> SormException(<span class=\"string\">\"tableInfo or TypeConvertor is null\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        StringBuilder javaResourse = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        <span class=\"comment\">// 生成package 例如 package cn.gxm.sorm.pojo</span></span><br><span class=\"line\">        javaResourse.append(<span class=\"string\">\"package \"</span>+ DBManager.getConfiguration().getPojoPackage()+<span class=\"string\">\";\\n\\n\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 生成import 例如 import java.sql.Date</span></span><br><span class=\"line\">        javaResourse.append(<span class=\"string\">\"import java.sql.*;\\n\"</span>);</span><br><span class=\"line\">        javaResourse.append(<span class=\"string\">\"import java.lang.*;\\n\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 生成autor 以及日期等java文件说明</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * <span class=\"doctag\">@author</span> GXM www.guokangjie.cn</span></span><br><span class=\"line\"><span class=\"comment\">         * <span class=\"doctag\">@date</span> 2019/5/17</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        javaResourse.append(<span class=\"string\">\"/**\\n\"</span>)</span><br><span class=\"line\">                .append(<span class=\"string\">\" * @author \"</span>+author+<span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\">                .append(<span class=\"string\">\" * @date \"</span>+<span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyy/MM/dd\"</span>).format(<span class=\"keyword\">new</span> Date())+<span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\">                .append(<span class=\"string\">\" */\\n\"</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 生成类的开始 例如 public class Emp &#123;</span></span><br><span class=\"line\">        javaResourse.append(<span class=\"string\">\"public class \"</span>+StringUtils.toUpperCaseHeadChar(tableInfo.getName())+<span class=\"string\">\"&#123;\\n\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 生成类的属性</span></span><br><span class=\"line\">        Set&lt;Map.Entry&lt;String, ColumnInfo&gt;&gt; entries = tableInfo.getColumns().entrySet();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Map.Entry&lt;String, ColumnInfo&gt; entry: entries)&#123;</span><br><span class=\"line\">            JavaFieldSetGet fieldSetGet = generateJavaFieldSetGet(entry.getValue(), typeConvertor);</span><br><span class=\"line\">            javaResourse.append(fieldSetGet+<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 生成类的结束  &#125;</span></span><br><span class=\"line\">        javaResourse.append(<span class=\"string\">\"&#125;\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> javaResourse.toString();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 生成与数据库字段匹配的java的pojo</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> tableInfo 表信息</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> typeConvertor java与数据库字段类型转化器</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> author 生成的Pojo的作者</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">generatePOJOFile</span><span class=\"params\">(TableInfo tableInfo,TypeConvertor typeConvertor,String author)</span></span>&#123;</span><br><span class=\"line\">        String javaSrc = generateJavaSrc(tableInfo, typeConvertor, author);</span><br><span class=\"line\">        String dirPath = DBManager.getConfiguration().getSrcPath()+<span class=\"string\">\"//\"</span>+DBManager.getConfiguration().getPojoPackage().replaceAll(<span class=\"string\">\"\\\\.\"</span>,<span class=\"string\">\"//\"</span>);</span><br><span class=\"line\">        File pojoDir = <span class=\"keyword\">new</span> File(dirPath);</span><br><span class=\"line\">        <span class=\"comment\">//包不存在则创建包</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!pojoDir.exists())&#123;</span><br><span class=\"line\">            pojoDir.mkdirs();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Writer writer = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            writer = <span class=\"keyword\">new</span> FileWriter(pojoDir.getAbsoluteFile()+<span class=\"string\">\"//\"</span>+StringUtils.toUpperCaseHeadChar(tableInfo.getName())+<span class=\"string\">\".java\"</span>);</span><br><span class=\"line\">            writer.write(javaSrc);</span><br><span class=\"line\">            writer.flush();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                writer.close();</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"pojo创建成功!!\"</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"四、完善TableContext\"><a href=\"#四、完善TableContext\" class=\"headerlink\" title=\"四、完善TableContext\"></a>四、完善TableContext</h1><p>我们已经在TableContext类中获取了所有的数据库源信息（<strong>第一部分与第二部分</strong>），而在<strong>第三部分</strong>我们也完成了根据tableInfo来生成pojo的（.java文件)，但是JavaFileUtils总归是一个工具类，我们将在TableContext对外提供生成的方法，即在TableContext类中添加方法<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 生成或者跟新java的pojo与数据库的对应关系</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">generateOrUpdateJavaFilePojo</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">       Set&lt;Map.Entry&lt;String, TableInfo&gt;&gt; entries = allTables.entrySet();</span><br><span class=\"line\">       <span class=\"keyword\">for</span> (Map.Entry&lt;String, TableInfo&gt; entry: entries)&#123;</span><br><span class=\"line\">           JavaFileUtils.generatePOJOFile(entry.getValue(),<span class=\"keyword\">new</span> MySqlTypeConvertor(),<span class=\"string\">\"GXM www.guokangjie.cn\"</span>);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure></p>\n<p>测试<br>配置正确的db.properties，就会在指定位置生成与数据库对应的pojo，如下图<br><img src=\"https://img-blog.csdnimg.cn/20190517161339443.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4MjYzMDgz,size_16,color_FFFFFF,t_70\" alt=\"pojo文件生成测试\"></p>\n","categories":["自己的ORM框架","java"],"tags":["自己的ORM框架","java"]},{"title":"'写出你自己的ORM框架（二) '","url":"http://guokangjie.cn/2019/05/19/写出你自己的ORM框架（二/","content":"<ul>\n<li><a href=\"https://github.com/wandun/ORM\" target=\"_blank\" rel=\"noopener\">代码地址</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38263083/article/details/90239643\" target=\"_blank\" rel=\"noopener\">写出你自己的ORM框架（一）</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38263083/article/details/90295130\" target=\"_blank\" rel=\"noopener\">写出你自己的ORM框架（二）</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38263083/article/details/90318186\" target=\"_blank\" rel=\"noopener\">写出你自己的ORM框架（三）</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38263083/article/details/90295861\" target=\"_blank\" rel=\"noopener\">写出你自己的ORM框架（四）</a><h1 id=\"一、完成query接口\"><a href=\"#一、完成query接口\" class=\"headerlink\" title=\"一、完成query接口\"></a>一、完成query接口</h1>query是一个接口，是因为每一个数据库的实现方法都不样，所以定义为接口，我们这里就只完成mysql的普通CRUD即可！<br>query接口中的方法如下：<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.gxm.sorm.core;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.gxm.sorm.bean.TableInfo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.function.Function;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> GXM www.guokangjie.cn</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2019/5/15</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * 操作数据库的核心接口</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Query</span>/*&lt;<span class=\"title\">T</span> <span class=\"keyword\">extends</span> <span class=\"title\">TableInfo</span>&gt;*/ </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 直接执行一个sql语句</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> sql 需要执行的sql语句，参数用 ? 代替</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> params sql语句的参数，用于替换 ?</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 执行sql语句影响的行数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">executeDML</span><span class=\"params\">(String sql,Object[] params)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 向数据库中插入一条数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> table 即java中的pojo对应的数据库中的表名称</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">insert</span><span class=\"params\">(Object table)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据 id 删除数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> clazz 数据库中表对应的java对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> primaryKey 主键</span></span><br><span class=\"line\"><span class=\"comment\">     *  delete from User where id = ?</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">delete</span><span class=\"params\">(Class clazz,Object primaryKey)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据与数据库对应的表的对象来删除</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据主键删除</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> table</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">delete</span><span class=\"params\">(Object table)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 跟新表数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> table 数据库中表对应的java对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> params 跟新的数值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 影响的条数</span></span><br><span class=\"line\"><span class=\"comment\">     * update User set name='' where id = ''</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">update</span><span class=\"params\">(Object table,String[] params)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 指定查询多条记录，并将记录封装到指定的class对象中</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> sql 需要执行查询的sql语句</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> clazz 查询结果封装的对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> params sql语句的参数</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 将封装的class对象变为集合返回</span></span><br><span class=\"line\"><span class=\"comment\">     * select id,name from User where name like ''</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\">List <span class=\"title\">queryRows</span><span class=\"params\">(String sql,Class clazz,String[] params)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 指定查询多条记录</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> sql 需要执行查询的sql语句</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> params sql语句的参数</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 将封装的class对象返回</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\">Object <span class=\"title\">queryOne</span><span class=\"params\">(String sql,String[] params)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 查询数值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> sql 需要执行查询的sql语句</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> params sql语句的参数</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 返回查询的数值</span></span><br><span class=\"line\"><span class=\"comment\">     * select count(*) from User where id = ''</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\">Number <span class=\"title\">queryNumber</span><span class=\"params\">(String sql,String[] params)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"二-、完成-executeDML\"><a href=\"#二-、完成-executeDML\" class=\"headerlink\" title=\"二 、完成 executeDML\"></a>二 、完成 executeDML</h1><p><strong>其中executeDML()为底层的代码，用于执行拼接的sql语句！</strong><br>在这里我们将使用jdbc原始的技术完成sql语句的执行,既然执行原始的jdbc语句那么有一点大家一定知道，关闭的问题，以及异常的捕捉，很烦人，所以我们封装到JDBCUtils中处理。而且处理preparedStatement传参问题也很通用，所以我们也封装成handleParams方法</p>\n<ul>\n<li><p><strong>JDBCUtils中的close方法代码如下：</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 处理jdbc关闭问题</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> preparedStatement PreparedStatement对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> connection    Connection 对象</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">(PreparedStatement preparedStatement,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                             Connection connection)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 这里关闭的顺序需要注意一下，还有最重要的就是不能放在同一个try代码块里处理</span></span><br><span class=\"line\">        <span class=\"comment\">// 因为一旦前面的关闭错误，后面的会无法关闭</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(preparedStatement!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">                preparedStatement.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(connection!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">                connection.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>JDBCUtils中的handleParams方法代码如下：</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 处理执行sql式preparedStatement的?传参问题</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> preparedStatement PreparedStatement对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> params 参数值数组对象</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">handleParams</span><span class=\"params\">(PreparedStatement preparedStatement, Object[] params)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 注意PreparedStatement设置下表是从1开始的</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i =<span class=\"number\">0</span>;i&lt;params.length;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                preparedStatement.setObject(i+<span class=\"number\">1</span>,params[i]);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>完整的executeDML方法就是如下了</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">executeDML</span><span class=\"params\">(String sql, Object[] params)</span> </span>&#123;</span><br><span class=\"line\">       PreparedStatement preparedStatement = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">       Connection connection = DBManager.getConnection();</span><br><span class=\"line\">       <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">           preparedStatement  = connection.prepareStatement(sql);</span><br><span class=\"line\">           JDBCUtils.handleParams(preparedStatement,params);</span><br><span class=\"line\">           <span class=\"keyword\">return</span> preparedStatement.executeUpdate();</span><br><span class=\"line\">       &#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</span><br><span class=\"line\">           e.printStackTrace();</span><br><span class=\"line\">       &#125;<span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">          JDBCUtils.close(preparedStatement,connection);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"三-、完成MysqlQuery的删除功能\"><a href=\"#三-、完成MysqlQuery的删除功能\" class=\"headerlink\" title=\"三 、完成MysqlQuery的删除功能\"></a>三 、完成MysqlQuery的删除功能</h1><h2 id=\"3-1-定义clazzAllTable\"><a href=\"#3-1-定义clazzAllTable\" class=\"headerlink\" title=\"3.1 定义clazzAllTable\"></a>3.1 定义clazzAllTable</h2><p>因为我们需要根据表来关联数据库中的表，所以我们之前在<strong>TableContext</strong>类中定义了allTables<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 对应数据库中所有的表</span></span><br><span class=\"line\"><span class=\"comment\">     * key 为表的名称， value为表对应的bean</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Map&lt;String, TableInfo&gt; allTables = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br></pre></td></tr></table></figure></p>\n<p><strong>但是我们根据指定的规则使用名称来找，可能会出现问题</strong>，所以我们这里再定义个Map,根据clazz来找，这下绝对不会出错,定义如下<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 将生成的pojo用class与数据库中的表关联起来</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Map&lt;Class ,TableInfo&gt; clazzAllTable = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br></pre></td></tr></table></figure></p>\n<p>填充clazzAllTable其实与allTables差不多，只不过，一个Key是表的名称，一个是表对应的pojo的class对象，实现如下<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//配置clazzAllTales</span></span><br><span class=\"line\">                Class&lt;?&gt; clazz = Class.forName(DBManager.getConfiguration().getPojoPackage() + <span class=\"string\">\".\"</span> + StringUtils.toUpperCaseHeadChar(tableName));</span><br><span class=\"line\">                clazzAllTable.put(clazz,tableInfo);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"3-2-接下来完成根据主键删除，根据主键删除的有二个重载方法\"><a href=\"#3-2-接下来完成根据主键删除，根据主键删除的有二个重载方法\" class=\"headerlink\" title=\"3.2 接下来完成根据主键删除，根据主键删除的有二个重载方法\"></a>3.2 接下来完成根据主键删除，根据主键删除的有二个重载方法</h2><blockquote>\n<p>/**</p>\n<pre><code>* 根据 id 删除数据\n* @param clazz 数据库中表对应的java对象\n* @param primaryKey 主键的值\n*  delete from User where id = ?\n*/\n</code></pre><ul>\n<li>public void delete(Class clazz, Object primaryKey)</li>\n</ul>\n</blockquote>\n   <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">delete</span><span class=\"params\">(Class clazz, Object primaryKey)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//根据class找到数据库中对应的表（这里不能根据类名来直接得出表名）</span></span><br><span class=\"line\">    <span class=\"comment\">//因为你之后还要获取主键</span></span><br><span class=\"line\">    TableInfo tableInfo = TableContext.getClazzAllTable().get(clazz);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//拼接sql,暂时不处理联合主键</span></span><br><span class=\"line\">    String sql = <span class=\"string\">\"delete from \"</span>+tableInfo.getName()+<span class=\"string\">\" where \"</span>+tableInfo.getOnlyPriKey().getName()+<span class=\"string\">\" =?\"</span>;</span><br><span class=\"line\">    executeDML(sql,<span class=\"keyword\">new</span> Object[]&#123;primaryKey&#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>/**</p>\n<pre><code>* 根据与数据库对应的表的对象来删除\n* 根据主键删除 主键值在传入的Object对象中\n* @param table\n*/\n</code></pre><ul>\n<li>public void delete(Object table)<br>这个方法主键的值并没有显式的展示出来，在传入的对象中，但是我们无法直接调用get方法获取，该属性的值，因为传入是object，所以我们可以根据主键的名称拼接该属性的get方法，通过反射调用即可<br>反射方法定义实现如下<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据属性名称调用其get方法</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> object 该属性属于那个对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> fieldName 属性的名称</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 调用该属性的get方法的返回值</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Object <span class=\"title\">getMethodResult</span><span class=\"params\">(Object object,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                  String fieldName)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Method method = object.getClass().getDeclaredMethod(<span class=\"string\">\"get\"</span> + StringUtils.toUpperCaseHeadChar(fieldName),<span class=\"keyword\">null</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> method.invoke(object, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n<p>完成该方法,代码如下<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">delete</span><span class=\"params\">(Object table)</span> </span>&#123;</span><br><span class=\"line\">        Class&lt;?&gt; clazz = table.getClass();</span><br><span class=\"line\">        <span class=\"comment\">// 获取主键</span></span><br><span class=\"line\">        TableInfo tableInfo = TableContext.getClazzAllTable().get(clazz);</span><br><span class=\"line\">        ColumnInfo onlyPriKey = tableInfo.getOnlyPriKey();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//通过反射的值获取主键的值(这里无法调用table的get方法，因为你不知道具体的对象)</span></span><br><span class=\"line\">        Object methodResult = ReflectUtils.getMethodResult(table, onlyPriKey.getName());</span><br><span class=\"line\">        <span class=\"comment\">//拼接sql,暂时不处理联合主键</span></span><br><span class=\"line\">        String sql = <span class=\"string\">\"delete from \"</span>+tableInfo.getName()+<span class=\"string\">\" where \"</span>+onlyPriKey.getName()+<span class=\"string\">\" =?\"</span>;</span><br><span class=\"line\">        executeDML(sql,<span class=\"keyword\">new</span> Object[]&#123;methodResult&#125;);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"四-、完成增加功能\"><a href=\"#四-、完成增加功能\" class=\"headerlink\" title=\"四 、完成增加功能\"></a>四 、完成增加功能</h1><p>增加功能就很简单了，拼接好sql语句后，直接交给executeDML方法去执行就可以了<br>代码如下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">insert</span><span class=\"params\">(Object table)</span> </span>&#123;</span><br><span class=\"line\">        Class&lt;?&gt; clazz = table.getClass();</span><br><span class=\"line\">        <span class=\"comment\">// 获取该对象的表信息</span></span><br><span class=\"line\">        TableInfo tableInfo = TableContext.getClazzAllTable().get(clazz);</span><br><span class=\"line\">        <span class=\"comment\">//我们这里处理主键是自动增长，且属性值为空我们不传入</span></span><br><span class=\"line\">        <span class=\"comment\">//TODO 处理主键不是自增</span></span><br><span class=\"line\">        <span class=\"comment\">//insert into emp(name,age,salary,birthday,deptId) values(?,?,?,?,?)</span></span><br><span class=\"line\">        StringBuilder sql = <span class=\"keyword\">new</span> StringBuilder(<span class=\"string\">\"insert into \"</span>+tableInfo.getName()+<span class=\"string\">\"(\"</span>);</span><br><span class=\"line\">        Field[] fields = clazz.getDeclaredFields();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> fieldValueNotNullCount = <span class=\"number\">0</span>;</span><br><span class=\"line\">        List&lt;Object&gt; fieldValues = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Field field:fields)&#123;</span><br><span class=\"line\">            Object methodResult = ReflectUtils.getMethodResult(table, field.getName());</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(methodResult!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">                fieldValueNotNullCount++;</span><br><span class=\"line\">                fieldValues.add(methodResult);</span><br><span class=\"line\">                sql.append(field.getName()+<span class=\"string\">\",\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//去掉多余的 , 变为 )</span></span><br><span class=\"line\">        sql.replace(sql.lastIndexOf(<span class=\"string\">\",\"</span>),sql.length(),<span class=\"string\">\") \"</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 拼接 ?</span></span><br><span class=\"line\">        sql.append(<span class=\"string\">\"values(\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i =<span class=\"number\">0</span>;i&lt;fieldValueNotNullCount;i++)&#123;</span><br><span class=\"line\">            sql.append(<span class=\"string\">\"?,\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//去掉多余的 , 变为 )</span></span><br><span class=\"line\">        sql.replace(sql.lastIndexOf(<span class=\"string\">\",\"</span>),sql.length(),<span class=\"string\">\") \"</span>);</span><br><span class=\"line\">        executeDML(sql.toString(),fieldValues.toArray());</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"五-、完成跟新\"><a href=\"#五-、完成跟新\" class=\"headerlink\" title=\"五 、完成跟新\"></a>五 、完成跟新</h1><p>跟新也很简单，也是拼接sql语句，不过，这里为了方便，我们需要将修改的值的fileName显示的传入进来</p>\n<pre><code>* @param fieldNames 需要修改的值的属性名称，不需要传入主键的fieldName\n</code></pre><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">update</span><span class=\"params\">(Object table, String[] fieldNames)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//&#123;empName,age&#125; ----&gt;  update emp set empName=?,age=? where 主键=?</span></span><br><span class=\"line\">        Class&lt;?&gt; clazz = table.getClass();</span><br><span class=\"line\">        TableInfo tableInfo = TableContext.getClazzAllTable().get(clazz);</span><br><span class=\"line\">        <span class=\"comment\">//遍历 fieldName 拼装 update emp set empName=?,age=?</span></span><br><span class=\"line\">        StringBuilder sql = <span class=\"keyword\">new</span> StringBuilder(<span class=\"string\">\"update emp set \"</span>);</span><br><span class=\"line\">        <span class=\"comment\">//属性的值列表</span></span><br><span class=\"line\">        List&lt;Object&gt; fieldValues = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (String fieldName:fieldNames)&#123;</span><br><span class=\"line\">            sql.append(fieldName+<span class=\"string\">\"=?,\"</span>);</span><br><span class=\"line\">            Object methodResult = ReflectUtils.getMethodResult(table, fieldName);</span><br><span class=\"line\">            fieldValues.add(methodResult);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//将最后一个 , ---&gt; 空格</span></span><br><span class=\"line\">        sql.replace(sql.lastIndexOf(<span class=\"string\">\",\"</span>),sql.length(),<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">        <span class=\"comment\">//拼接 where 主键=?</span></span><br><span class=\"line\">        String priKeyName = tableInfo.getOnlyPriKey().getName();</span><br><span class=\"line\">        sql.append(<span class=\"string\">\"where \"</span>+priKeyName+<span class=\"string\">\"=?\"</span>);</span><br><span class=\"line\">        fieldValues.add(ReflectUtils.getMethodResult(table,priKeyName));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> executeDML(sql.toString(), fieldValues.toArray());</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"六、测试\"><a href=\"#六、测试\" class=\"headerlink\" title=\"六、测试\"></a>六、测试</h1><p>本篇完成了增删改，为方便测试，建立一个测试类，专门测试，内容如下<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> test.cn.gxm.sorm.core; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.gxm.sorm.core.DBManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.gxm.sorm.core.MysqlQuery;</span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.gxm.sorm.core.TableContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.gxm.sorm.pojo.Emp;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Before; </span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.After;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Date;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\">* MysqlQuery Tester. </span></span><br><span class=\"line\"><span class=\"comment\">* </span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@author</span> GXM www.guokangjie.cn</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@since</span></span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@version</span> 1.0 </span></span><br><span class=\"line\"><span class=\"comment\">*/</span> </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MysqlQueryTest</span> </span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">private</span> MysqlQuery mysqlQuery;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Before</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">before</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        mysqlQuery = <span class=\"keyword\">new</span> MysqlQuery();</span><br><span class=\"line\">        <span class=\"comment\">// 测试之前将 db.properties加载到对应映射类中</span></span><br><span class=\"line\">        DBManager.getConnection();</span><br><span class=\"line\">        <span class=\"comment\">// 加载所有的表信息</span></span><br><span class=\"line\">        TableContext.getClazzAllTable();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@After</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">after</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    *</span></span><br><span class=\"line\"><span class=\"comment\">    * Method: executeDML(String sql, Object[] params)</span></span><br><span class=\"line\"><span class=\"comment\">    *</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testExecuteDML</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//<span class=\"doctag\">TODO:</span> Test goes here...</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    *</span></span><br><span class=\"line\"><span class=\"comment\">    * Method: insert(Object table)</span></span><br><span class=\"line\"><span class=\"comment\">    *</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testInsert</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        Emp emp = <span class=\"keyword\">new</span> Emp();</span><br><span class=\"line\">        emp.setAge(<span class=\"number\">22</span>);</span><br><span class=\"line\">        emp.setBirthady(<span class=\"keyword\">new</span> Date(<span class=\"number\">19200000</span>));</span><br><span class=\"line\">        emp.setEmpName(<span class=\"string\">\"阿豹\"</span>);</span><br><span class=\"line\">        emp.setSalary(<span class=\"number\">160000</span>d);</span><br><span class=\"line\">        mysqlQuery.insert(emp);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    *</span></span><br><span class=\"line\"><span class=\"comment\">    * Method: delete(Class clazz, Object primaryKey)</span></span><br><span class=\"line\"><span class=\"comment\">    *</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testDeleteForClazzPrimaryKey</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        mysqlQuery.delete(Emp.class,<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    *</span></span><br><span class=\"line\"><span class=\"comment\">    * Method: delete(Object table)</span></span><br><span class=\"line\"><span class=\"comment\">    *</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testDeleteTable</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        Emp emp = <span class=\"keyword\">new</span> Emp();</span><br><span class=\"line\">        emp.setId(<span class=\"number\">2</span>);</span><br><span class=\"line\">        mysqlQuery.delete(emp);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    *</span></span><br><span class=\"line\"><span class=\"comment\">    * Method: update(Object table, String[] params)</span></span><br><span class=\"line\"><span class=\"comment\">    *</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testUpdate</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        Emp emp = <span class=\"keyword\">new</span> Emp();</span><br><span class=\"line\">        emp.setId(<span class=\"number\">3</span>);</span><br><span class=\"line\">        emp.setSalary(<span class=\"number\">20000</span>d);</span><br><span class=\"line\">        emp.setEmpName(<span class=\"string\">\"明正\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> update = mysqlQuery.update(emp, <span class=\"keyword\">new</span> String[]&#123;<span class=\"string\">\"salary\"</span>, <span class=\"string\">\"empName\"</span>&#125;);</span><br><span class=\"line\">        System.out.println(update!=<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","categories":["自己的ORM框架","java"],"tags":["自己的ORM框架","java"]},{"title":"'写出你自己的ORM框架（三) '","url":"http://guokangjie.cn/2019/05/19/写出你自己的ORM框架（三）/","content":"<ul>\n<li><a href=\"https://github.com/wandun/ORM\" target=\"_blank\" rel=\"noopener\">代码地址</a><ul>\n<li><a href=\"https://blog.csdn.net/qq_38263083/article/details/90239643\" target=\"_blank\" rel=\"noopener\">写出你自己的ORM框架（一）</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38263083/article/details/90295130\" target=\"_blank\" rel=\"noopener\">写出你自己的ORM框架（二）</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38263083/article/details/90318186\" target=\"_blank\" rel=\"noopener\">写出你自己的ORM框架（三）</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38263083/article/details/90295861\" target=\"_blank\" rel=\"noopener\">写出你自己的ORM框架（四）</a><h1 id=\"一、本篇主要完成查询功能\"><a href=\"#一、本篇主要完成查询功能\" class=\"headerlink\" title=\"一、本篇主要完成查询功能\"></a>一、本篇主要完成查询功能</h1></li>\n<li>多行多列 List&lt; javaBean &gt;</li>\n<li>一行多列 javaBean</li>\n<li>一行一列</li>\n<li>普通对象 object</li>\n<li>数值 Number (select count(*) from emp )<h1 id=\"二、完成queryRows，多行多列查询\"><a href=\"#二、完成queryRows，多行多列查询\" class=\"headerlink\" title=\"二、完成queryRows，多行多列查询\"></a>二、完成queryRows，多行多列查询</h1>其实这里完成的很Low，这里为了方便，将sql语句交给用户完成,<br>测试代码如下：<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List queryRows = mysqlQuery.queryRows(<span class=\"string\">\"select empName,age from emp where age&gt;? and age&lt;?\"</span>,</span><br><span class=\"line\">               Emp.class, <span class=\"keyword\">new</span> String[]&#123;<span class=\"string\">\"21\"</span>, <span class=\"string\">\"30\"</span>&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>其中需要明白一点，就原始数据的类型即使扩大范围了，但是得到class还是原始的类型，如下</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String s = <span class=\"string\">\"hjh\"</span>;</span><br><span class=\"line\">        Object s1 =s;</span><br><span class=\"line\">        System.out.println(s1.getClass()); <span class=\"comment\">//java.lang.String</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>queryRows代码如下，这里需要用到<strong>查询结果数据库的元数据</strong>通过<strong>java.sql.ResultSet.getMetaData()</strong>,\\<br>之前获取表结构是通过<strong>connection.getMetaData()</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> List <span class=\"title\">queryRows</span><span class=\"params\">(String sql, Class clazz, String[] params)</span> </span>&#123;</span><br><span class=\"line\">       PreparedStatement preparedStatement = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">       ResultSet resultSet =<span class=\"keyword\">null</span>;</span><br><span class=\"line\">       Connection connection = DBManager.getConnection();</span><br><span class=\"line\">       <span class=\"comment\">// 将查询到的结果分装到List&lt;JavaBean&gt;中</span></span><br><span class=\"line\">       List result = <span class=\"keyword\">new</span> ArrayList();</span><br><span class=\"line\">       <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">           <span class=\"comment\">//sql =&gt;&gt;&gt; select empName,age from emp where age&gt;? and age&lt;?</span></span><br><span class=\"line\">           preparedStatement  = connection.prepareStatement(sql);</span><br><span class=\"line\">           <span class=\"comment\">// select empName,age from emp where age&gt;20 and age&lt;30</span></span><br><span class=\"line\">           JDBCUtils.handleParams(preparedStatement,params);</span><br><span class=\"line\">           resultSet = preparedStatement.executeQuery();</span><br><span class=\"line\">           <span class=\"comment\">//得到查询结果的数据库元数据</span></span><br><span class=\"line\">           ResultSetMetaData metaData = resultSet.getMetaData();</span><br><span class=\"line\">           <span class=\"keyword\">while</span> (resultSet.next())&#123;</span><br><span class=\"line\">               Object newInstance = clazz.newInstance();</span><br><span class=\"line\">               <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;metaData.getColumnCount();i++)&#123;</span><br><span class=\"line\">                   <span class=\"comment\">//得到查询结果列的标签也就是列名  如 empName,age 下表从一开始</span></span><br><span class=\"line\">                   String columnLabel = metaData.getColumnLabel(i + <span class=\"number\">1</span>);</span><br><span class=\"line\">                   <span class=\"comment\">//得到查询结果列的指定column的值  如 empName='小米' 下表从一开始</span></span><br><span class=\"line\">                   Object columnValue = resultSet.getObject(i + <span class=\"number\">1</span>);</span><br><span class=\"line\">                   <span class=\"comment\">//通过反射调用该方法的指定属性的set方法将其赋值  如果返回值 empName='小米' 那么columnValue.getClass() 就是java.lang.string</span></span><br><span class=\"line\">                   ReflectUtils.setMethodResult(newInstance,columnLabel,columnValue.getClass(),columnValue);</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">               <span class=\"comment\">//一个对象完成，将其加入result集合中去</span></span><br><span class=\"line\">               result.add(newInstance);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">           e.printStackTrace();</span><br><span class=\"line\">       &#125;<span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">           JDBCUtils.close(preparedStatement,resultSet,connection);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"2-1-多表联查\"><a href=\"#2-1-多表联查\" class=\"headerlink\" title=\"2.1 多表联查\"></a>2.1 多表联查</h2><p>因为我们将sql语句的书写功能交给了使用者，而且我们只是根据数据库的查询结果分装成java对象，所以，只要查询数据库得到的字段在java中有对应的pojo，我们都可以完成，查询的分装<br>测试<br>两表查询，先建立两表查询结果的java对象,如下(set与get方法省略)<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.gxm.sorm.vo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> GXM www.guokangjie.cn</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2019/5/18</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">EmpToDept</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer empId;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String empName;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String deptName;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer deptId;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>测试代码<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String sql = <span class=\"string\">\"SELECT e.id empId,e.empName,d.deptName,d.id deptId FROM emp AS e LEFT JOIN dept AS d ON e.deptId = d.id WHERE d.id &gt; ?\"</span>;</span><br><span class=\"line\">List queryRows1 = mysqlQuery.queryRows(sql, EmpToDept.class, <span class=\"keyword\">new</span> String[]&#123;<span class=\"string\">\"1\"</span>&#125;);</span><br><span class=\"line\">System.out.println(queryRows1);</span><br></pre></td></tr></table></figure></p>\n<p>结果：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[EmpToDept&#123;empId=<span class=\"number\">1</span>, empName=<span class=\"string\">'GXM'</span>, deptName=<span class=\"string\">'测试部'</span>, deptId=<span class=\"number\">2</span>&#125;]</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"三、查询一行多列\"><a href=\"#三、查询一行多列\" class=\"headerlink\" title=\"三、查询一行多列\"></a>三、查询一行多列</h1><p>很简单，直接调用前面的多行多列，取第一个即可,代码如下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">queryOne</span><span class=\"params\">(String sql,Class clazz, String[] params)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> queryRows(sql,clazz,params).size()&gt;<span class=\"number\">0</span>?queryRows(sql,clazz,params).get(<span class=\"number\">0</span>):<span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"四、一行一列\"><a href=\"#四、一行一列\" class=\"headerlink\" title=\"四、一行一列\"></a>四、一行一列</h1><p>修改前面的多行多列的代码，直接执行取完第一列，第一行数据直接返回，代码如下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Number <span class=\"title\">queryNumber</span><span class=\"params\">(String sql, String[] params)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (Number) queryValue(sql, params);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> Object <span class=\"title\">queryValue</span><span class=\"params\">(String sql,String[] params)</span> </span>&#123;</span><br><span class=\"line\">        PreparedStatement preparedStatement = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        ResultSet resultSet =<span class=\"keyword\">null</span>;</span><br><span class=\"line\">        Connection connection = DBManager.getConnection();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//sql =&gt;&gt;&gt; SELECT COUNT(*) FROM emp WHERE deptId&gt;?</span></span><br><span class=\"line\">            preparedStatement  = connection.prepareStatement(sql);</span><br><span class=\"line\">            <span class=\"comment\">// SELECT COUNT(*) FROM emp WHERE deptId&gt;1</span></span><br><span class=\"line\">            JDBCUtils.handleParams(preparedStatement,params);</span><br><span class=\"line\">            resultSet = preparedStatement.executeQuery();</span><br><span class=\"line\">            <span class=\"comment\">//得到查询结果的数据库元数据</span></span><br><span class=\"line\">            ResultSetMetaData metaData = resultSet.getMetaData();</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (resultSet.next())&#123;</span><br><span class=\"line\">               <span class=\"keyword\">return</span> resultSet.getObject(<span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            JDBCUtils.close(preparedStatement,resultSet,connection);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"五、完善代码的小优化\"><a href=\"#五、完善代码的小优化\" class=\"headerlink\" title=\"五、完善代码的小优化\"></a>五、完善代码的小优化</h1><h2 id=\"5-1-优化代码的重用性\"><a href=\"#5-1-优化代码的重用性\" class=\"headerlink\" title=\"5.1 优化代码的重用性\"></a>5.1 优化代码的重用性</h2><p>对于我么到现在所做的操作跟数据库的类型关系并不大，因为都是基础的CRUD，因此，我们把MysqlQuery中的方法放到父类中去，将父类Query从接口变为抽象类,MysqlQuery继承这个抽象父类Query</p>\n<h2 id=\"5-2-优化查询的代码重用性\"><a href=\"#5-2-优化查询的代码重用性\" class=\"headerlink\" title=\"5.2 优化查询的代码重用性\"></a>5.2 优化查询的代码重用性</h2><ul>\n<li><p>这个优化的就是查询的部分，前面的几种查询，基本模板都是一样的，只是封装的结果集的方式不同，所以我们将结果抽出来，定义为一个接口<strong>CallResultSet</strong>，里面有一个方法<strong>handleResultSet</strong>用于对不同的结果集的处理<br>代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.gxm.sorm.core.query;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">CallResultSet</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据需求完成对查询结果的分装</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> resultSet 查询结果集</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> clazz 封装数据的对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> &lt;T&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    &lt;T&gt; <span class=\"function\">Object <span class=\"title\">handleResultSet</span><span class=\"params\">(ResultSet resultSet, Class&lt;T&gt; clazz)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>模板集<strong>baseQuery</strong>,代码如下</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 基础的查询</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> sql 查询的sql语句</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> params sql语句的参数值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> callResultSet 查询的结果集处理器</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Nullable</span> <span class=\"keyword\">private</span> &lt;T&gt; <span class=\"function\">Object <span class=\"title\">baseQuery</span><span class=\"params\">(@NotNull  String sql,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                 @Nullable String[] params,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                 @NotNull  Class&lt;T&gt; clazz,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                 @NotNull  CallResultSet callResultSet)</span> </span>&#123;</span><br><span class=\"line\">        PreparedStatement preparedStatement = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        ResultSet resultSet =<span class=\"keyword\">null</span>;</span><br><span class=\"line\">        Connection connection = DBManager.getConnection();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//sql =&gt;&gt;&gt; SELECT COUNT(*) FROM emp WHERE deptId&gt;?</span></span><br><span class=\"line\">            preparedStatement  = connection.prepareStatement(sql);</span><br><span class=\"line\">            <span class=\"comment\">// SELECT COUNT(*) FROM emp WHERE deptId&gt;1</span></span><br><span class=\"line\">            JDBCUtils.handleParams(preparedStatement,params);</span><br><span class=\"line\">            resultSet = preparedStatement.executeQuery();</span><br><span class=\"line\">            <span class=\"keyword\">return</span> callResultSet.handleResultSet(resultSet,clazz);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            JDBCUtils.close(preparedStatement,resultSet,connection);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>每种查询的处理</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>查询的类型</th>\n<th>继承CallResultSet类的具体实现</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>多行多列</td>\n<td>QueryRowsCallResultSet implements CallResultSet</td>\n</tr>\n<tr>\n<td>一行多列</td>\n<td>不用写直接根以前一样调用多行多列的方法即可</td>\n</tr>\n<tr>\n<td>一行一列</td>\n<td>class QueryNumberCallResultSet implements CallResultSet</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"5-3-优化连接池\"><a href=\"#5-3-优化连接池\" class=\"headerlink\" title=\"5.3 优化连接池\"></a>5.3 优化连接池</h2><ul>\n<li>连接池初始化，实现初始化多个连接放在集合中，以供使用</li>\n<li>获取连接，就直接从连接池中获取<ul>\n<li>首先判断当前连接池中连接数量是否够用，不够用就增加连接知道到达最大值</li>\n<li>连接池中获取集合中的最后一个连接</li>\n<li>关闭连接，从连接池中关闭连接<ul>\n<li>连接池判断，如果当前连接池中连接的数量已经超过最大值，就真的关闭连接</li>\n<li>如果没有就将其加入到连接池中</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>连接池代码如下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.gxm.sorm.pool;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.gxm.sorm.core.DBManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.gxm.sorm.utils.JDBCUtils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.LinkedList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> GXM www.guokangjie.cn</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2019/5/19</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * 管理数据库的连接的连接池</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DBConnPool</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 连接池对象</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> List&lt;Connection&gt; pool;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 连接池中连接的最大连接数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Integer maxConnection = DBManager.getConfiguration().getMaxConnection();</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 连接池中连接的最小连接数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Integer minConnection = DBManager.getConfiguration().getMinConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        pool = <span class=\"keyword\">new</span> LinkedList&lt;&gt;();</span><br><span class=\"line\">        initPool();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 初始化连接池</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">initPool</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;maxConnection;i++)&#123;</span><br><span class=\"line\">            pool.add(DBManager.createConnection());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 从连接词中获取连接</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">synchronized</span> Connection <span class=\"title\">poolCreateConnection</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 连接池中的连接数量已经小于最低值,需要增加connection</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (pool.size()&lt;minConnection)&#123;</span><br><span class=\"line\">            pool.add(DBManager.createConnection());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Connection connection = pool.get(pool.size()-<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"comment\">//从连接池中关闭</span></span><br><span class=\"line\">        pool.remove(connection);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> connection;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 从连接池中关闭连接</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> connection</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">poolCloseConnection</span><span class=\"params\">(Connection connection)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 连接池中的连接已经超过最大值，就真的关闭连接</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(pool.size()&gt;maxConnection)&#123;</span><br><span class=\"line\">            JDBCUtils.close(<span class=\"keyword\">null</span>,<span class=\"keyword\">null</span>,connection);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        pool.add(connection);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>那么DBManager中的连接部分代码就可以这样写</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 从连接池中获取connection，向外提供connection</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title\">getConnection</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> DBConnPool.poolCreateConnection();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 创建真正的连接</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title\">createConnection</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Class.forName(configuration.getDriver());</span><br><span class=\"line\">            <span class=\"keyword\">return</span> DriverManager.getConnection(configuration.getUrl(),</span><br><span class=\"line\">                    configuration.getUsername(), configuration.getPassword());</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 从连接池中关闭连接</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">closeConnection</span><span class=\"params\">(Connection connection)</span></span>&#123;</span><br><span class=\"line\">        DBConnPool.poolCloseConnection(connection);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n","categories":["自己的ORM框架","java"],"tags":["自己的ORM框架","java"]},{"title":"'写出你自己的ORM框架（四 ) '","url":"http://guokangjie.cn/2019/05/19/写出你自己的ORM框架（四 ) /","content":"<ul>\n<li><a href=\"https://github.com/wandun/ORM\" target=\"_blank\" rel=\"noopener\">代码地址</a><ul>\n<li><a href=\"https://blog.csdn.net/qq_38263083/article/details/90239643\" target=\"_blank\" rel=\"noopener\">写出你自己的ORM框架（一）</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38263083/article/details/90295130\" target=\"_blank\" rel=\"noopener\">写出你自己的ORM框架（二）</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38263083/article/details/90318186\" target=\"_blank\" rel=\"noopener\">写出你自己的ORM框架（三）</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38263083/article/details/90295861\" target=\"_blank\" rel=\"noopener\">写出你自己的ORM框架（四）</a></li>\n</ul>\n</li>\n</ul>\n<p>需要完善的东西</p>\n<ul>\n<li>xml解析</li>\n<li>注解</li>\n<li>数据的缓存</li>\n<li>懒加载</li>\n<li>框架的完善（过于简陋）</li>\n</ul>\n","categories":["自己的ORM框架","java"],"tags":["自己的ORM框架","java"]},{"title":"'有序二叉树实现及相关遍历'","url":"http://guokangjie.cn/2019/05/13/有序二叉树实现及相关遍历/","content":"<p>﻿# 实现思路</p>\n<ul>\n<li>如果左子树不为空，那么左子树上的所有值都均小于它的根节点的值</li>\n<li>如果右子树不为空，那么右子树上的所有值都均大于或等于它的根节点的值</li>\n<li>左，右子树也为二叉排序树</li>\n</ul>\n<h1 id=\"二叉树节点定义\"><a href=\"#二叉树节点定义\" class=\"headerlink\" title=\"二叉树节点定义\"></a>二叉树节点定义</h1><ul>\n<li>当前节点值</li>\n<li>当前节点的左节点</li>\n<li>当前节点的右节点</li>\n</ul>\n<p>代码如下,set与get方法省略<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 当前节点的值</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   T data;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 当前节点的左节点</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   Node left;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 当前节点的右节点</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   Node right;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"二叉树实现\"><a href=\"#二叉树实现\" class=\"headerlink\" title=\"二叉树实现\"></a>二叉树实现</h1><ul>\n<li><p>排序二叉树构建实现思路：  </p>\n<blockquote>\n<p> 判断当前节点与新增的节点的大小，没有增加上，则变化当前节点为遍历的节点，继续遍历即可</p>\n</blockquote>\n</li>\n<li><p>前，中，后排序，使用递归的方式(<strong>前中后都是根据root来的</strong>)</p>\n</li>\n<li>层序遍历采用队列</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.gxm.binarytree;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.LinkedList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Queue;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> GXM</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2019/5/13</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * 排序二叉树相关实现</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Binarytree</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Node&lt;Integer&gt; root;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">insert</span><span class=\"params\">(Integer data)</span></span>&#123;</span><br><span class=\"line\">        Node&lt;Integer&gt; newNode = <span class=\"keyword\">new</span> Node&lt;Integer&gt;(data);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(root == <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            root = newNode;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Node curNode = root;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//小于当前节点去找左节点</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>((Integer)newNode.data &lt; (Integer) curNode.data)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(curNode.left == <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">                    curNode.left = newNode;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                curNode = curNode.left;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">//大于当前节点或者等于  都找找右节点</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(curNode.right == <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">                    curNode.right = newNode;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                curNode = curNode.right;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据数据构建有序二叉树</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> arr</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Node&lt;Integer&gt; <span class=\"title\">buildTree</span><span class=\"params\">(Integer []arr)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Integer tmp : arr)&#123;</span><br><span class=\"line\">            insert(tmp);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> root;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 前序遍历</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">preTraversing</span><span class=\"params\">(Node&lt;Integer&gt; root)</span></span>&#123;</span><br><span class=\"line\">        Node&lt;Integer&gt; cur = root;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (cur != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            System.out.print(cur.data);</span><br><span class=\"line\">            preTraversing(cur.left);</span><br><span class=\"line\">            preTraversing(cur.right);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 中序遍历</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">midTraversing</span><span class=\"params\">(Node&lt;Integer&gt; root)</span></span>&#123;</span><br><span class=\"line\">        Node&lt;Integer&gt; cur = root;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (cur != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            midTraversing(cur.left);</span><br><span class=\"line\">            System.out.print(cur.data);</span><br><span class=\"line\">            midTraversing(cur.right);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 后序遍历</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">postTraversing</span><span class=\"params\">(Node&lt;Integer&gt; root)</span></span>&#123;</span><br><span class=\"line\">        Node&lt;Integer&gt; cur = root;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (cur != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            postTraversing(cur.left);</span><br><span class=\"line\">            postTraversing(cur.right);</span><br><span class=\"line\">            System.out.print(cur.data);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 层序遍历</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> root</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">SequenceTraversing</span><span class=\"params\">(Node&lt;Integer&gt; root)</span></span>&#123;</span><br><span class=\"line\">        Queue&lt;Node&gt; queue = <span class=\"keyword\">new</span> LinkedList&lt;&gt;();</span><br><span class=\"line\">        queue.add(root);</span><br><span class=\"line\">        <span class=\"comment\">// 不空就一直取</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (!queue.isEmpty())&#123;</span><br><span class=\"line\">            <span class=\"comment\">// poll以后队列中就没有了，指针移到下一个node上，所以我们这里获取</span></span><br><span class=\"line\">            Node poll = queue.poll();</span><br><span class=\"line\">            System.out.print(poll.data);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(poll.left!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">                queue.add(poll.left);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(poll.right!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">                queue.add(poll.right);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Binarytree bt = <span class=\"keyword\">new</span> Binarytree();</span><br><span class=\"line\">        Node&lt;Integer&gt; root = bt.buildTree(<span class=\"keyword\">new</span> Integer[]&#123;<span class=\"number\">2</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">4</span>, <span class=\"number\">9</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">5</span>&#125;);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"前序\"</span>);</span><br><span class=\"line\">        bt.preTraversing(root);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"中序\"</span>);</span><br><span class=\"line\">        bt.midTraversing(root);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"后序\"</span>);</span><br><span class=\"line\">        bt.postTraversing(root);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"层序\"</span>);</span><br><span class=\"line\">        bt.SequenceTraversing(root);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 结果<br> <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">前序</span><br><span class=\"line\"><span class=\"number\">2187436579</span></span><br><span class=\"line\">中序</span><br><span class=\"line\"><span class=\"number\">1234567789</span></span><br><span class=\"line\">后序</span><br><span class=\"line\"><span class=\"number\">1356477982</span></span><br><span class=\"line\">层序</span><br><span class=\"line\"><span class=\"number\">2187947365</span></span><br></pre></td></tr></table></figure></p>\n<p> 构建的有序二叉树如下<br> <img src=\"https://img-blog.csdnimg.cn/20190513170439259.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4MjYzMDgz,size_16,color_FFFFFF,t_70\" alt=\"有序二叉树\"></p>\n","categories":["数据结构","java"],"tags":["java","数据结构"]},{"title":"'java文件分割与合并'","url":"http://guokangjie.cn/2019/04/28/java文件分割与合并/","content":"<h1 id=\"分割\"><a href=\"#分割\" class=\"headerlink\" title=\"分割\"></a>分割</h1><p><strong>思想</strong>:</p>\n<blockquote>\n<p>读数据的流不结束，知道读完整个文档，写数据的流写完一个分割文件就关闭，下一个分割文件再打开一个新的。</p>\n</blockquote>\n<p>代码如下:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 分割后的每个文件大小 这里是 1M</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> SIZE = <span class=\"number\">1024</span>*<span class=\"number\">1024</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 文件分割</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> srcFile 原始文件</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> path 保存分割后的文件位置</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">splitFile</span><span class=\"params\">(File srcFile,String path)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(srcFile.length() &lt; <span class=\"number\">0</span> || !srcFile.isFile())&#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"文件内容不正确\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        FileInputStream inputStream =<span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            inputStream = <span class=\"keyword\">new</span> FileInputStream(srcFile);</span><br><span class=\"line\">            <span class=\"comment\">// 分割后的文件的数量</span></span><br><span class=\"line\">            <span class=\"keyword\">long</span> chunkFileNum = srcFile.length()%SIZE==<span class=\"number\">0</span>?srcFile.length()/SIZE:srcFile.length()/SIZE+<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 每次读取的大小</span></span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">            <span class=\"comment\">// 实际读取的大小</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> length = -<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i =<span class=\"number\">0</span>; i&lt;chunkFileNum; i++)&#123;</span><br><span class=\"line\">                File distFile = <span class=\"keyword\">new</span> File(path+i);</span><br><span class=\"line\">                FileOutputStream outputStream = <span class=\"keyword\">new</span> FileOutputStream(distFile);</span><br><span class=\"line\">                <span class=\"keyword\">while</span> ((length =inputStream.read(buffer))!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                    outputStream.write(buffer);</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(distFile.length() &gt;= SIZE)&#123;</span><br><span class=\"line\">                        <span class=\"comment\">//关闭写流,进行下一个分块文件</span></span><br><span class=\"line\">                        outputStream.close();</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            log.info(<span class=\"string\">\"分割完成请到&#123;&#125;文件下查看\"</span>,path);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"解析文件错误\"</span>,e);</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">//关闭读流</span></span><br><span class=\"line\">                inputStream.close();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"合并\"><a href=\"#合并\" class=\"headerlink\" title=\"合并\"></a>合并</h1><p>与分割正好相反<br><strong>思想</strong>:</p>\n<blockquote>\n<p>写数据的流不结束，知道写完整个文档，读数据的流读完一个分割文件就关闭，下一个分割文件再打开一个新的。</p>\n</blockquote>\n<p>代码如下<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 文件合并</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> path 需要服分割文件的路劲</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> distFileName 合并后文件的名称，请加上后缀名</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mergeFile</span><span class=\"params\">(String path,String distFileName)</span></span>&#123;</span><br><span class=\"line\">        File file = <span class=\"keyword\">new</span> File(path);</span><br><span class=\"line\">        File[] listFiles = file.listFiles();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(listFiles == <span class=\"keyword\">null</span> || listFiles.length ==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"文件目录下为空\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        OutputStream out = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">             out =  <span class=\"keyword\">new</span> FileOutputStream(<span class=\"keyword\">new</span> File(distFileName));</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;listFiles.length;i++)&#123;</span><br><span class=\"line\">                <span class=\"comment\">// 每次读取的大小</span></span><br><span class=\"line\">                <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">                <span class=\"comment\">// 实际读取的大小</span></span><br><span class=\"line\">                <span class=\"keyword\">int</span> length = -<span class=\"number\">1</span>;</span><br><span class=\"line\">                InputStream in = <span class=\"keyword\">new</span> FileInputStream(<span class=\"keyword\">new</span> File(path+<span class=\"string\">\"\\\\\"</span>+i));</span><br><span class=\"line\">                <span class=\"keyword\">while</span> ((length = in.read(buffer))!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                    out.write(buffer,<span class=\"number\">0</span>,length);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                in.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            log.info(<span class=\"string\">\"文件和并完成,请到&#123;&#125;查看\"</span>,distFileName);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                out.close();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h1><p>在上面的分割与合并的方法中我并没有判断路劲中是否包含 <code>\\\\</code>，大家可以自行处理一下!<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        MyFileUtils utils = <span class=\"keyword\">new</span> MyFileUtils();</span><br><span class=\"line\"><span class=\"comment\">//        utils.splitFile(new File(\"C:\\\\Users\\\\xiaomi\\\\Desktop\\\\GitTemp\\\\temp.ppt\"),</span></span><br><span class=\"line\"><span class=\"comment\">//                \"C:\\\\Users\\\\xiaomi\\\\Desktop\\\\GitTemp\\\\\");</span></span><br><span class=\"line\"></span><br><span class=\"line\">        utils.mergeFile(<span class=\"string\">\"C:\\\\Users\\\\xiaomi\\\\Desktop\\\\GitTemp\"</span>,</span><br><span class=\"line\">                <span class=\"string\">\"C:\\\\Users\\\\xiaomi\\\\Desktop\\\\GitTemp\\\\temp2.ppt\"</span>);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190428094755426.gif\" alt=\"在这里插入图片描述\"></p>\n","categories":[],"tags":["java","零零散散"]},{"title":"链表实现以及其相关链表操作","url":"http://guokangjie.cn/2019/04/01/链表实现以及其相关链表操作/","content":"<p>﻿<strong>前言：</strong></p>\n<blockquote>\n<p><strong>欢迎各位访问我的个人博客： <a href=\"http://www.guokangjie.cn\" target=\"_blank\" rel=\"noopener\">www.guokangjie.cn</a></strong></p>\n</blockquote>\n<h1 id=\"1、节点定义\"><a href=\"#1、节点定义\" class=\"headerlink\" title=\"1、节点定义\"></a>1、节点定义</h1><blockquote>\n<p>主要分为 两部分：</p>\n<ol>\n<li><strong>下一个节点</strong></li>\n<li><strong>当前节点的数据</strong></li>\n<li><strong>这里没有使用</strong>private<strong>修饰两个属性，是为了之后的使用时不必使用set和get方法来访问</strong><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LinkNode</span></span>&#123;</span><br><span class=\"line\">    LinkNode next;</span><br><span class=\"line\">    String data;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"LinkNode&#123;\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"next=\"</span> + next +</span><br><span class=\"line\">                <span class=\"string\">\", data=\"</span> + data +</span><br><span class=\"line\">                <span class=\"string\">'&#125;'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</blockquote>\n<h1 id=\"2、定义单链表\"><a href=\"#2、定义单链表\" class=\"headerlink\" title=\"2、定义单链表\"></a>2、定义单链表</h1><h2 id=\"2-1-链表的增加与长度计算\"><a href=\"#2-1-链表的增加与长度计算\" class=\"headerlink\" title=\"2.1 链表的增加与长度计算\"></a>2.1 链表的增加与长度计算</h2><blockquote>\n<ol>\n<li><strong>链表的增加只需要从头节点遍历到尾节点，在未节点添加数据，即可!</strong></li>\n<li><strong>计算链表的长度同理也是如此遍历到最后一个节点，在此过程中记录长度即可</strong></li>\n<li><strong>注意点需要为该类指定唯一的头节点（该节点很重要）</strong></li>\n</ol>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.gxm.linkedlist;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> GXM</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2019/3/31</span></span><br><span class=\"line\"><span class=\"comment\"> * 单链表的实现以及相关基本操作</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyLinkList</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 唯一的头节点</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> LinkNode head = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 增加节点</span></span><br><span class=\"line\"><span class=\"comment\">      * <span class=\"doctag\">@param</span> data  节点数据</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> data)</span></span>&#123;</span><br><span class=\"line\">       LinkNode newNode = <span class=\"keyword\">new</span> LinkNode();</span><br><span class=\"line\">       newNode.data = data;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (head == <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">           head = newNode;</span><br><span class=\"line\">           <span class=\"keyword\">return</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       LinkNode tmpNode = head;</span><br><span class=\"line\">       <span class=\"keyword\">while</span>( tmpNode.next != <span class=\"keyword\">null</span> )&#123;</span><br><span class=\"line\">           tmpNode = tmpNode.next;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       tmpNode.next = newNode;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 得到链表的长度</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">length</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">int</span> size = <span class=\"number\">0</span>;</span><br><span class=\"line\">       LinkNode tmpNode = head;</span><br><span class=\"line\">       <span class=\"keyword\">while</span> (tmpNode != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">           size ++ ;</span><br><span class=\"line\">           tmpNode = tmpNode.next;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> size;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-2-链表的删除与输出\"><a href=\"#2-2-链表的删除与输出\" class=\"headerlink\" title=\"2.2 链表的删除与输出\"></a>2.2 链表的删除与输出</h2><blockquote>\n<ol>\n<li><strong>以下方法还是在之前的那个类中编写</strong></li>\n<li><strong>删除指定的数据节点，可以是传入一个节点去删除，也可以传入一个索引下表来删除（这里索引从0开始），都可以，思路都是遍历到该索引所在的位置节点，通过前一个节点指向当前节点的下一个节点，就把当前节点删除了!</strong></li>\n<li><strong>遍历就很简单了，疯狂遍历直到最后一个节点，每次数据节点信息即可!</strong></li>\n</ol>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据下表删除指定的链表节点数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> index 需要删除节点的下表 (从0开始)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 是否成功</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">delete</span><span class=\"params\">(<span class=\"keyword\">int</span> index)</span></span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (index &lt;<span class=\"number\">0</span> || index &gt;= length())&#123;</span><br><span class=\"line\">           <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"comment\">//删除头节点</span></span><br><span class=\"line\">       <span class=\"keyword\">if</span> (index == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">           head = head.next;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;</span><br><span class=\"line\">       <span class=\"comment\">//前一个节点</span></span><br><span class=\"line\">       LinkNode preNode = head;</span><br><span class=\"line\">       <span class=\"comment\">//当前节点</span></span><br><span class=\"line\">       LinkNode curNode = head.next;</span><br><span class=\"line\">       <span class=\"keyword\">while</span> (curNode != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">           <span class=\"comment\">//匹配删除</span></span><br><span class=\"line\">           <span class=\"keyword\">if</span>(i == index)&#123;</span><br><span class=\"line\">               preNode.next = curNode.next;</span><br><span class=\"line\">               <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"comment\">//不匹配继续遍历</span></span><br><span class=\"line\">           preNode = curNode;</span><br><span class=\"line\">           curNode = curNode.next;</span><br><span class=\"line\">           i++;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 打印列表</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printList</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        LinkNode tmpNode = head;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (tmpNode != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            System.out.println(tmpNode.data);</span><br><span class=\"line\">            tmpNode = tmpNode.next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-3-链表的排序\"><a href=\"#2-3-链表的排序\" class=\"headerlink\" title=\"2.3 链表的排序\"></a>2.3 链表的排序</h2><blockquote>\n<ol>\n<li><strong>对链表排序(因为我这里节点信息存储的是int 所以直接比较大小 如果不是请按需处理)</strong></li>\n<li><strong>我这里采用冒泡排序的原理（排序方法很多 大家可以自行按需处理</strong>）</li>\n</ol>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">order</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">// 第一层循环的节点</span></span><br><span class=\"line\">      LinkNode curNode = head;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> end = <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (curNode != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">          <span class=\"comment\">//第二层循环的节点1</span></span><br><span class=\"line\">          LinkNode oneNode = curNode;</span><br><span class=\"line\">          <span class=\"comment\">//第二层循环的节点2</span></span><br><span class=\"line\">          LinkNode twoNode = oneNode.next;</span><br><span class=\"line\">         <span class=\"keyword\">while</span> (twoNode != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">              <span class=\"keyword\">if</span>(oneNode.data &gt; twoNode.data)&#123;</span><br><span class=\"line\">                  <span class=\"comment\">// 互换</span></span><br><span class=\"line\">                  <span class=\"keyword\">int</span> data = oneNode.data;</span><br><span class=\"line\">                  oneNode.data = twoNode.data;</span><br><span class=\"line\">                  twoNode.data = data;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              <span class=\"comment\">// 继续比较</span></span><br><span class=\"line\">              oneNode = twoNode;</span><br><span class=\"line\">              twoNode = twoNode.next;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">         end++;</span><br><span class=\"line\">         <span class=\"keyword\">if</span>(end == length() - <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">             <span class=\"keyword\">break</span>;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3-1-排序举例\"><a href=\"#2-3-1-排序举例\" class=\"headerlink\" title=\"2.3.1 排序举例\"></a>2.3.1 排序举例</h3><blockquote>\n<p><strong>考虑到我排序写的不是很好，所以这里我做一个测试，把之前排序的每一个步骤写出来.测试数据如下</strong></p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MyLinkList myLinkList = <span class=\"keyword\">new</span> MyLinkList();</span><br><span class=\"line\">       myLinkList.add(<span class=\"number\">4</span>);</span><br><span class=\"line\">       myLinkList.add(<span class=\"number\">6</span>);</span><br><span class=\"line\">       myLinkList.add(<span class=\"number\">2</span>);</span><br><span class=\"line\">       myLinkList.add(<span class=\"number\">1</span>);</span><br><span class=\"line\">       myLinkList.add(<span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>  第一遍：4 2 1 0 6<br>  第二遍：2 1 0 4 6<br>  第三遍：1 0 2 4 6<br>  第四遍：0 1 2 4 6</p>\n</blockquote>\n<p><strong>还是没有思路，请自行上网查找排序的思路!。。。。。</strong></p>\n<h2 id=\"2-4-删除链表中重复的数据\"><a href=\"#2-4-删除链表中重复的数据\" class=\"headerlink\" title=\"2.4 删除链表中重复的数据\"></a>2.4 删除链表中重复的数据</h2><blockquote>\n<p><strong>第一种思路：大家自然而然的就想到了遍历该链表，比较每一个元素，再去删除，但是时间复杂度会很大</strong></p>\n</blockquote>\n<blockquote>\n<p><strong>第二种思路：大家也能想到不能重复的话，map不就可以完成吗，但是增加了空间复杂度</strong></p>\n</blockquote>\n<p><strong>我这里就以第二种方式来做说明</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 删除链表中重复的元素</span></span><br><span class=\"line\"><span class=\"comment\">    * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">deleteDuplecate</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">      Hashtable&lt;Integer,Integer&gt; map = <span class=\"keyword\">new</span> Hashtable&lt;Integer,Integer&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">      LinkNode preNode = head;</span><br><span class=\"line\">      LinkNode curNode = head;</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (curNode !=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(!map.containsKey(curNode.data))&#123;</span><br><span class=\"line\">              <span class=\"comment\">//  key  就是当前值 对于value 这里没有要求所以都可以无所谓</span></span><br><span class=\"line\">              map.put(curNode.data,<span class=\"number\">1</span>);</span><br><span class=\"line\">              <span class=\"comment\">//继续执行判断</span></span><br><span class=\"line\">              preNode = curNode;</span><br><span class=\"line\">          &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 该节点以存在  删除该重复节点(并且只需要改变前节点的next即可)</span></span><br><span class=\"line\">              preNode.next = curNode.next;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          curNode = curNode.next;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-5-找出链表中倒数第k个元素\"><a href=\"#2-5-找出链表中倒数第k个元素\" class=\"headerlink\" title=\"2.5 找出链表中倒数第k个元素\"></a>2.5 找出链表中倒数第k个元素</h2><blockquote>\n<p><strong>第一种思路： 得到链表的长度，再遍历到（n-k）个元素的位置不就ok了吗,但是得到链表长度需要遍历一边，再遍历一遍得到倒数第k个元素，这样需要遍历两次链表</strong></p>\n</blockquote>\n<blockquote>\n<p><strong>第二种思路：如果从头至尾的方向从链表的某个元素开始，遍历k的元素正好到达链表结尾，那么这个元素就是我们需要的，但是这种方法大家想一下就能知道，在遍历每一个元素的时候，都需要向下遍历k个元素判断是否是末尾元素，其实效率也挺差的。</strong></p>\n</blockquote>\n<blockquote>\n<p><strong>第三种思路：设置两个节点索引，两者距离相差k，知道后者到达尾节点，那么前者就是我们需要求得的元素，并且只需要遍历一边。</strong></p>\n</blockquote>\n<p><strong>我这里就以比较好的第三种方式实现</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * 找出链表中倒数第k个元素</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@param</span> k  倒数第k个元素的下标</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@return</span>   对应的节点</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> LinkNode <span class=\"title\">findReciprocalElem</span><span class=\"params\">(<span class=\"keyword\">int</span> k)</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 直接返回头节点</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(k == length())&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> head;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    LinkNode oneNode = head;</span><br><span class=\"line\">    LinkNode twoNode = head;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;k;i++)&#123;</span><br><span class=\"line\">        twoNode = twoNode.next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 长度超出</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (twoNode == <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//直到 快的节点（twoNode）到达尾节点</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (twoNode != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">        oneNode = oneNode.next;</span><br><span class=\"line\">        twoNode = twoNode.next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> oneNode;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-6-实现链表的反转\"><a href=\"#2-6-实现链表的反转\" class=\"headerlink\" title=\"2.6 实现链表的反转\"></a>2.6 实现链表的反转</h2><blockquote>\n<p><strong>思路：将每一个链表的next的位置改变即可，注意最后需要改变头节点，不然你只是再当前改变，头节点信息没有改变，以后在使用时就会出现问题！（处理方式就是对遍历到的每一个节点分 前、后、以及当前、三个节点记录后再处理）</strong></p>\n</blockquote>\n<p><strong>代码如下：</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * 反转链表</span></span><br><span class=\"line\"><span class=\"comment\">  * 遍历到的每一个节点分 前、后、以及当前、三个节点记录后再处理</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">resverseLinked</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">     LinkNode curNode = head;</span><br><span class=\"line\">     LinkNode preNode = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">     LinkNode nextNode;</span><br><span class=\"line\">     <span class=\"keyword\">while</span> (curNode != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">         nextNode = curNode.next;</span><br><span class=\"line\">         curNode.next = preNode;</span><br><span class=\"line\">         preNode = curNode;</span><br><span class=\"line\">         curNode = nextNode;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     head = preNode;  <span class=\"comment\">//不要忘了改变头节点</span></span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-7-从尾到头输出单链表\"><a href=\"#2-7-从尾到头输出单链表\" class=\"headerlink\" title=\"2.7 从尾到头输出单链表\"></a>2.7 从尾到头输出单链表</h2><blockquote>\n<p><strong>第一种方式：相信大家能想到，反转链表后输出，但是遍历次数较多</strong></p>\n</blockquote>\n<blockquote>\n<p><strong>第二种方式：使用递归，输出尾节点后再输出前面的节点</strong></p>\n</blockquote>\n<p><strong>我这里就写第二种方式：</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * 从尾到头输出单链表,使用递归的方式</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">resverseToPrint</span><span class=\"params\">(LinkNode node)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(node.next == <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//到达尾节点输出</span></span><br><span class=\"line\">        System.out.println(node.data);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//没有到达尾节点，继续递归</span></span><br><span class=\"line\">        resverseToPrint(node.next);</span><br><span class=\"line\">        <span class=\"comment\">// 上一次的结果以输出，可以输出这次的了</span></span><br><span class=\"line\">        System.out.println(node.data);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>因为该方法需要传入一个头节点，所以测试代码我这里给一下:</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LinkNode head = <span class=\"keyword\">new</span> LinkNode();</span><br><span class=\"line\">       head.data = <span class=\"number\">1</span>;</span><br><span class=\"line\">       LinkNode sec = <span class=\"keyword\">new</span> LinkNode();</span><br><span class=\"line\">       sec.data = <span class=\"number\">2</span>;</span><br><span class=\"line\">       LinkNode thr = <span class=\"keyword\">new</span> LinkNode();</span><br><span class=\"line\">       thr.data = <span class=\"number\">3</span>;</span><br><span class=\"line\">       LinkNode fou = <span class=\"keyword\">new</span> LinkNode();</span><br><span class=\"line\">       fou.data = <span class=\"number\">4</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">       head.next = sec;</span><br><span class=\"line\">       sec.next = thr;</span><br><span class=\"line\">       thr.next = fou;</span><br><span class=\"line\"></span><br><span class=\"line\">       myLinkList.resverseToPrint(head);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-8-寻找单链表中的中间节点\"><a href=\"#2-8-寻找单链表中的中间节点\" class=\"headerlink\" title=\"2.8 寻找单链表中的中间节点\"></a>2.8 寻找单链表中的中间节点</h2><blockquote>\n<p><strong>第一种方式：先遍历得到链表长度，在根据长度判断遍历到中间节点</strong><br><strong>第二种方式:  设置连个节点，但twoNode的速度是oneOnde遍历速度的一倍</strong></p>\n</blockquote>\n<p><strong>说明如下：</strong><br><img src=\"https://img-blog.csdnimg.cn/20190401172014575.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4MjYzMDgz,size_16,color_FFFFFF,t_70\" alt=\"描述\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  *  寻找单链表中的中间节点</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> LinkNode[] searchMidNode()&#123;</span><br><span class=\"line\">    LinkNode []result = <span class=\"keyword\">new</span> LinkNode[<span class=\"number\">2</span>];</span><br><span class=\"line\">    LinkNode oneNode = head;</span><br><span class=\"line\">    LinkNode twoNode = head;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (oneNode != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(twoNode.next == <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            result[<span class=\"number\">0</span>] = oneNode;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (twoNode.next.next == <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 其实这里还有  oneNode.next</span></span><br><span class=\"line\">            result[<span class=\"number\">0</span>] = oneNode;</span><br><span class=\"line\">            result[<span class=\"number\">1</span>] = oneNode.next;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        oneNode = oneNode.next;</span><br><span class=\"line\">        twoNode = twoNode.next.next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><blockquote>\n<p>1 . <strong>以上是部分链表的操作，关于代码的测试，我仅仅是测试了一遍，如果有错误，希望各位可以指出，非常感谢!!</strong><br>2 . <strong>部分代码的逻辑判断不是很严谨只是考虑了大多数情况！并没有做出很好的判断</strong></p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20190331160530579.jpg\" alt></p>\n","categories":["数据结构与算法","java"],"tags":["java","数据结构与算法"]},{"title":"使用百度api与opencv完成图片人脸检测并显示","url":"http://guokangjie.cn/2019/03/17/使用百度api与oenpcv完成图片人脸检测并显示/","content":"<p>﻿# 前言**：</p>\n<ul>\n<li>最近花了点时间搭建了一个个人博客，hh！  还是挺开心的！欢迎各位访问<br><a href=\"http://www.guokangjie.cn\" target=\"_blank\" rel=\"noopener\">www.guokangjie.cn</a></li>\n<li>其实快大二的时候，我就学了一部分opencv。但那时自己实在是太菜!! hh<br><img src=\"https://img-blog.csdnimg.cn/20190317174647653.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4MjYzMDgz,size_16,color_FFFFFF,t_70\" alt=\"无奈\"><br>最近看到bi站一个可爱的女博主的视频，使用python和opencv画出非常奈斯的图片，我知道必须使用一波opencv了  哈哈！！（地址: <a href=\"https://www.bilibili.com/video/av20349733?p=2\" target=\"_blank\" rel=\"noopener\">点击跳转</a>）<br>关于语言的使用,呃呃，选择使用一下当下上升趋势最快的 python 感受一下hh</li>\n</ul>\n<hr>\n<h1 id=\"言归正传\"><a href=\"#言归正传\" class=\"headerlink\" title=\"言归正传:\"></a><strong>言归正传</strong>:</h1><p>其实关于opencv自己本身就可以做出人脸识别了，但是这里先不说，使用一下百度提供的免费人脸检测API 地址：<a href=\"https://login.bce.baidu.com/?account=&amp;redirect=https://console.bce.baidu.com/ai/?fromai=1\" target=\"_blank\" rel=\"noopener\">点击跳转</a>，免费的，直接注册，再申请一个应用即可</p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>下载sdk  我这里下载的是python的 ，地址:<a href=\"https://ai.baidu.com/sdk#bfr\" target=\"_blank\" rel=\"noopener\">点击跳转</a><br>下完以后配置相关参数，在根据返回的参数完成图片展示即可 ，先看效果<br><img src=\"https://img-blog.csdnimg.cn/20190317175526954.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4MjYzMDgz,size_16,color_FFFFFF,t_70\" alt=\"效果图\"></p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"keyword\">import</span> cv2 <span class=\"keyword\">as</span> cv</span><br><span class=\"line\"><span class=\"keyword\">from</span> aip <span class=\"keyword\">import</span> AipFace</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 你的 APPID AK SK</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_api_client</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    APP_ID = <span class=\"string\">'你的 App ID'</span></span><br><span class=\"line\">    API_KEY = <span class=\"string\">'你的 Api Key'</span></span><br><span class=\"line\">    SECRET_KEY = <span class=\"string\">'你的 Secret Ke'</span></span><br><span class=\"line\">    client = AipFace(APP_ID, API_KEY, SECRET_KEY)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> client</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#将图片转为base64编码格式</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">img2base64</span><span class=\"params\">(path: str)</span>:</span></span><br><span class=\"line\">    f = open(path, <span class=\"string\">'rb'</span>)</span><br><span class=\"line\">    image = base64.b64encode(f.read())</span><br><span class=\"line\">    image64 = str(image, <span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> image64</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">show_image</span><span class=\"params\">(face_list, path: str)</span>:</span></span><br><span class=\"line\">    left = int(face_list[<span class=\"number\">0</span>][<span class=\"string\">'location'</span>][<span class=\"string\">'left'</span>])</span><br><span class=\"line\">    top = int(face_list[<span class=\"number\">0</span>][<span class=\"string\">'location'</span>][<span class=\"string\">'top'</span>])</span><br><span class=\"line\">    width = int(face_list[<span class=\"number\">0</span>][<span class=\"string\">'location'</span>][<span class=\"string\">'width'</span>])</span><br><span class=\"line\">    height = int(face_list[<span class=\"number\">0</span>][<span class=\"string\">'location'</span>][<span class=\"string\">'height'</span>])</span><br><span class=\"line\">    img = cv.imread(path)                                  <span class=\"comment\"># 426 71 98 85  height = 400  640</span></span><br><span class=\"line\">    print(<span class=\"string\">\"%d %d %d %d %d %d\"</span> % (left, top, width, height, img.shape[<span class=\"number\">0</span>], img.shape[<span class=\"number\">1</span>]))</span><br><span class=\"line\">    cv.rectangle(img, (left, top), (left+width, top+height), (<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">255</span>), <span class=\"number\">3</span>)</span><br><span class=\"line\">    cv.imshow(<span class=\"string\">\"check face\"</span>, img)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果有可选参数</span></span><br><span class=\"line\">options = &#123;&#125;</span><br><span class=\"line\">options[<span class=\"string\">\"face_field\"</span>] = <span class=\"string\">\"age\"</span></span><br><span class=\"line\">options[<span class=\"string\">\"max_face_num\"</span>] = <span class=\"number\">2</span></span><br><span class=\"line\">options[<span class=\"string\">\"face_type\"</span>] = <span class=\"string\">\"LIVE\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">image_type = <span class=\"string\">\"BASE64\"</span></span><br><span class=\"line\">client = get_api_client()</span><br><span class=\"line\">image64 = img2base64(<span class=\"string\">'image/002.jpg'</span>)</span><br><span class=\"line\">res = client.detect(image64, image_type, options)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> res[<span class=\"string\">'error_code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">    face_list = res[<span class=\"string\">'result'</span>][<span class=\"string\">'face_list'</span>]</span><br><span class=\"line\">    show_image(face_list,<span class=\"string\">'image/002.jpg'</span>)</span><br><span class=\"line\">    cv.waitKey(<span class=\"number\">0</span>)</span><br><span class=\"line\">    cv.destroyAllWindows()</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"调用api失败\"</span>)</span><br></pre></td></tr></table></figure>\n<p>写到这里我不禁感叹一句<strong>API</strong>大法好！！！  过几天下次博客使用opencv完成该部分工作</p>\n","categories":["python","opencv"],"tags":["python","opencv"]},{"title":"属于自己的个人博客","url":"http://guokangjie.cn/2019/03/15/使用hexo搭建个人博客/","content":"<h1 id=\"闲聊\"><a href=\"#闲聊\" class=\"headerlink\" title=\"闲聊\"></a>闲聊</h1><p>最近一直希望自己能 弄一个属于自己的个人博客！但是也不想自己买一个服务器搭建一个，除了能了解一下项目的部署，搭建一个博客实在没有必要，毕竟现在博客网站实在太多了，而且自己买一个服务器实在不划算！嗯，好吧平穷使我正直！！hhh</p>\n<p><img src=\"/images/temp/2.jpeg\" alt=\"无奈\"></p>\n","categories":["零零散散"],"tags":["零零散散"]},{"title":"about","url":"http://guokangjie.cn/about/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"http://guokangjie.cn/link/index.html","content":"","categories":[],"tags":[]},{"title":"project","url":"http://guokangjie.cn/project/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://guokangjie.cn/search/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://guokangjie.cn/tag/index.html","content":"","categories":[],"tags":[]},{"title":"category","url":"http://guokangjie.cn/category/index.html","content":"","categories":[],"tags":[]}]